<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>newkayak12.github.io</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>A website with blog posts and pages</description>
    <pubDate>Wed, 22 May 2024 19:21:52 +0900</pubDate>
    
      <item>
        <title>[nginx Series] 01 Reverseproxy</title>
        <link>/network/2024/05/22/nginx-series-01-ReverseProxy.html</link>
        <guid isPermaLink="true">/network/2024/05/22/nginx-series-01-ReverseProxy.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/Nginx/01.ReverseProxy.md&quot;&gt;Dictionary - Nginx&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;nginx-기본--reverseproxy&quot;&gt;Nginx 기본 + ReverseProxy&lt;/h1&gt;

&lt;h2 id=&quot;reverseproxy에-대한-기본-내용-참조-&quot;&gt;&lt;a href=&quot;../apache/01.ReverseProxy.md&quot;&gt;ReverseProxy에 대한 기본 내용 참조 &lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;config&quot;&gt;Config&lt;/h2&gt;

&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;www.example.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## 띄어쓰기 민감한 편&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$http_x_forwarded_proto&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http')&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kn&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host$request_uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;www.example.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;rootPath&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/api&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://localhost:8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx -t&lt;/code&gt; 로 syntax 점검을 받을 수도 있다.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[network Series] 02 Tls</title>
        <link>/network/2024/05/22/network-series-02-TLS.html</link>
        <guid isPermaLink="true">/network/2024/05/22/network-series-02-TLS.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/network/TLS.md&quot;&gt;Dictionary - TLS&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;tlstransport-layer-security&quot;&gt;TLS(Transport Layer Security)&lt;/h1&gt;
&lt;h2 id=&quot;tls-란&quot;&gt;TLS 란&lt;/h2&gt;
&lt;p&gt;전송 계층 보안(TLS)은 인터넷 상의 커뮤니케이션을 위한 개인 정보와 데이터 보안을 용이하게 하기 위해 설계되어 널리 채택된 보안 프로토콜입니다.
TLS의 주요 사용 사례는 웹 사이트를 로드하는 웹 브라우저와 같이 웹 응용 프로그램과 서버 간의 커뮤니케이션을 암호화하는 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;어떤-일을-하는가&quot;&gt;어떤 일을 하는가?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;암호화 : 제3자로부터 전송되는 데이터를 숨깁니다.&lt;/li&gt;
  &lt;li&gt;인증 : 정보를 교환하는 당사자가 요청된 당사자임을 보장합니다.&lt;/li&gt;
  &lt;li&gt;무결성 : 데이터가 위조되거나 변조되지 않았는지 확인합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tls-vs-ssl&quot;&gt;TLS vs. SSL&lt;/h2&gt;
&lt;p&gt;TLS는 Netscape가 개발한 SSL(Secure Sockets Layer)이라고 불리는 이전의 암호화 프로토콜에서 발전한 것입니다. 
TLS 버전 1.0은 SSL 버전 3.1로서 개발을 시작했지만 Netscape와 더 이상 연관이 없음을 명시하기 위해서 발표 전에 프로토콜의 이름이 변경되었습니다.
이러한 역사 때문에 용어 TLS와 SSL은 가끔 서로 바꿔서 사용됩니다.&lt;/p&gt;

&lt;h2 id=&quot;tls-vs-https&quot;&gt;TLS vs. HTTPS&lt;/h2&gt;
&lt;p&gt;HTTPS는 HTTP 프로토콜 상위에서 TLS 암호화를 구현한 것으로 모든 웹 사이트와 다른 웹 서비스에서 사용됩니다. 
따라서 HTTPS를 사용하는 웹 사이트는 TLS 암호화를 이용합니다.&lt;/p&gt;

&lt;h2 id=&quot;tls-인증서란&quot;&gt;TLS 인증서란&lt;/h2&gt;
&lt;p&gt;웹 사이트나 응용 프로그램이 TLS를 사용하기 위해서는 원본 서버에 TLS 인증서가 설치되어 있어야 합니다(위에서 설명한 이름 혼동 때문에 이 인증서는 “SSL 인증서”라고도 알려져 있습니다).
인증 기관이 도메인을 소유한 사람 혹은 비즈니스에게 TLS 인증서를 발행합니다.
인증서는 서버의 공개 키와 더불어 누가 도메인 소유자인지에 대한 중요한 정보를 포함하며, 이 두 가지는 모두 서버의 신원을 확인하는 데 중요합니다.&lt;/p&gt;

&lt;h2 id=&quot;어떤-과정으로-작동하는가&quot;&gt;어떤 과정으로 작동하는가?&lt;/h2&gt;
&lt;p&gt;TLS 연결은 TLS Handshake로 알려진 일련의 순서를 사용하여 초기화됩니다.
사용자가 TLS를 사용하는 웹 사이트를 돌아다니면 사용자 장치(클라이언트 장치로도 알려짐)와 웹 서버 간에 TLS Handshake가 시작됩니다.&lt;/p&gt;

&lt;p&gt;TLS Handshake 동안 사용자 장치와 웹 서버는 다음과 같은 일을 수행합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용할 TLS 버전(TLS 1.0, 1.2, 1.3 등)을 지정합니다&lt;/li&gt;
  &lt;li&gt;사용할 암호 제품군(아래 참고)을 결정합니다&lt;/li&gt;
  &lt;li&gt;서버의 TLS 인증서를 사용하여 서버의 신원을 인증합니다.&lt;/li&gt;
  &lt;li&gt;Handshake가 완료된 후 키 간의 메시지를 암호화하기 위한 세션 키를 생성합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TLS Handshake는 각 커뮤니케이션 세션을 위한 암호 제품군을 구축합니다.
암호 제품군은 공유된 암호화 키 또는 세션 키와 같은 세부 정보를 명시하는 알고리즘 집합으로 해당 특정 세션에 사용됩니다. 
공개 키 암호화로 알려진 기술 덕분에 TLS는 암호화되지 않은 채널을 통해 일치하는 세션 키를 설정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;Handshake는 또한 인증을 처리하며, 이는 대개 클라이언트에게 신원을 증명하는 서버로 구성됩니다.
이는 공개 키를 사용하여 수행됩니다. 공개 키는 단방향 암호화를 사용하는 암호화 키로,
공개 키를 가진 누구나 신뢰성을 보장하기 위해 서버의 개인 키로 암호화된 데이터를 해독할 수 있음을 의미하지만 원래 발신자만 개인 키를 사용해 데이터를 암호화할 수 있습니다.
서버의 공개 키는 TLS 인증서의 일부입니다.&lt;/p&gt;

&lt;p&gt;데이터카 암호화되고 인증되고 나면, 메시지 인증 코드(MAC)와 함께 서명됩니다. 수신자는 데이터의 무결성을 보장하기 위해 MAC를 확인할 수 있습니다. 
이는 아스피린 병에서 발견할 수 있는 일종의 부정 조작 방지 포장과 같은 것입니다. 
소비자는 구매할 때 포장이 손상되지 않았으면 아무도 약에 손대지 않았다는 것을 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/tls-ssl-handshake.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tls가-미치는-영향&quot;&gt;TLS가 미치는 영향&lt;/h2&gt;
&lt;p&gt;TLS의 최신 버전은 웹 응용 프로그램 성능에 거의 영향을 미치지 않습니다.&lt;/p&gt;

&lt;p&gt;TLS 연결을 설정하는 데 수반되는 복잡한 프로세스 때문에 로드 시간과 계산 능력이 소모되어야 합니다. 
데이터가 전송되기 전에 클라이언트와 서버는 왔다 갔다 몇 번 커뮤니케이션해야 하며, 
이는 클라이언트와 서버 모두를 위한 메모리뿐만 아니라 웹 응용 프로그램을 위한 귀중한 밀리세컨드의 로딩 시간을 소모합니다.&lt;/p&gt;

&lt;p&gt;그러나 대신에 TLS Handshake가 생성한 잠재적인 지연을 완화하는 것을 돕는 기술이 있습니다. 
하나는 TLS Handshake가 완료되기 전에 서버와 클라이언트가 데이터 전송을 시작하도록 하는 TLS False Start입니다.
TLS를 빠르게 하기 위한 또 다른 기술은 이전에 커뮤니케이션한 적이 있는 서버와 클라이언트가 간략화된 Handshake를 사용하도록 허용하는 TLS Session Resumption입니다.&lt;/p&gt;

&lt;p&gt;이러한 개선 사항은 TLS를 로딩 시간에 현저하게 영향을 미쳐서는 안 되는 매우 빠른 프로토콜로 만드는 데 도움을 주었습니다. TLS와 연관된 계산 비용은 오늘날 표준에 따르면 거의 무시해도 좋은 정도입니다.&lt;/p&gt;

&lt;p&gt;2018년에 발표된 TLS 1.3은 TLS를 더 빠르게 만들었습니다. TLS 1.3의 TLS Handshake는 몇 밀리세컨드로 프로세스를 단축하며 2회 왕복 대신 1회 왕복(또는 왔다 갔다하는 커뮤니케이션)만을 요구합니다.
사용자가 전에 웹 사이트에 연결한 적이 있으면, TLS Handshake는 0회 왕복을 할 수 있으며, 이는 속도를 더 빠르게 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;https://www.cloudflare.com/ko-kr/learning/ssl/transport-layer-security-tls/&lt;/cite&gt;
&lt;cite&gt;https://en.wikipedia.org/wiki/Transport_Layer_Security&lt;/cite&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[network Series] 01 Subnet</title>
        <link>/network/2024/05/22/network-series-01-Subnet.html</link>
        <guid isPermaLink="true">/network/2024/05/22/network-series-01-Subnet.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/network/Subnet.md&quot;&gt;Dictionary - IP&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;ipv4-ipv6&quot;&gt;IPv4, IPv6&lt;/h1&gt;

&lt;h2 id=&quot;ipv4&quot;&gt;IPv4&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;####.####.####.###
0 ~ 255 (2^8)으로 구성되며
4옥텟으로 구분되는 형식을 `IPv4`라고 한다.
총 32비트의 주소 공간을 제공한다.

    192   .    168   .     0    .    1
 11000000 . 10101000 . 00000000 . 00000001
|--------|                       |--------|
8비트(=1바이트)                     옥텟(Octet)
|-----------------------------------------|
      IPv4 주소 : 8비트 * 4 = 32비트(4바이트)
      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ipv6&quot;&gt;IPv6&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IPv6의 128비트 주소공간은 다음과 같이 16비트(2옥텟)를 16진수로 표현하여
8자리로 나타낸다.(8옥텟)
2001:0db8:85a3:08d3:1319:8a2e:0370:7334

러나 대부분의 자리가 0의 숫자를 갖게 되므로, 0000을 하나의 0으로 축약하거나,
혹은 아예 연속되는 0의 그룹을 없애고 ':' 만을 남길 수 있다.
따라서 아래의 IPv6 주소들은 모두 같은 주소를 나타낸다.

2001:0DB8:0000:0000:0000:0000:1428:57ab
2001:0DB8:0000:0000:0000::1428:57ab
2001:0DB8:0:0:0:0:1428:57ab
2001:0DB8:0::0:1428:57ab
2001:0DB8::1428:57ab

특수 주소 공간
::/128 - 이 주소는 모든 값을 0으로 설정한 특수한 주소이다. 가상적으로만 사용된다. IP 미설정 상태의 발신 주소이다..
::1/128 - 자기 자신의 주소를 가리키는 루프백 주소이다. 프로그램에서 이 주소로 패킷을 전송하면 네트워크는 전송자에게로 패킷을 반송한다. IPv4의 127.0.0.1 주소와 동일하다.
::/96 - IPv4 호환 주소를 위해 사용되는 주소공간이다.
::ffff:0:0/96 - IPv4 매핑 주소를 위해 사용되는 주소공간이다.
fc00::/7 - IPv6 유니캐스트를 위한 주소공간이다.
fe80::/10 - link-local address를 위한 주소공간이다. IPv4의 자동 설정 IP 주소인 169.254.x.x 에 해당한다.
fec0::/10 - site-local address를 위한 주소공간이다. 네트워크 내부에서만 유효한 주소이며, 2004년 10월 RFC3879에서 폐기되어 더 이상 사용되지 않는다.
ff00::/8 - IPv6 멀티캐스트를 위한 주소공간이다. IPv4의 브로드캐스트는 더 이상 지원되지 않으며, IPv6에서는 대신 멀티캐스트를 사용해야 한다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;네트워크주소와-호스트주소&quot;&gt;네트워크주소와 호스트주소&lt;/h2&gt;
&lt;pre&gt;
IP 주소는 네트워크 주소와 호스트 주소 두 부분으로 나뉘게 됩니다.
네트워크 주소는 호스트(단말)들을 모은 네트워크를 지칭하는 주소를 뜻합니다.
네트워크 주소가 동일한 네트워크를 로컬 네트워크라고 합니다.

호스트 주소는 하나의 네트워크 내에 존재하는 호스트(단말)를 구분하기 위한 주소를 뜻합니다.
그런데 IP 주소에서 네트워크 주소와 호스트 주소를 구분하는 경계점이 고정되어있지 않습니다.
그렇다보니 필요한 호스트 IP 개수에 따라 네트워크의 크기를 다르게 할당할 수 있도록 클래스 라는 개념을 도입했는데요.
클래스는 A, B, C, D, E 클래스가 존재하며 각각의 클래스에 할당되는 IP 주소 갯수와 역할이 다릅니다.

A 클래스 -&amp;gt; 네트워크.호스트.호스트.호스트
B 클래스 -&amp;gt; 네트워크.네트워크.호스트.호스트
C 클래스 -&amp;gt; 네트워크.네트워크.네트워크.호스트

A 클래스 -&amp;gt; 1~127.0.0.0 (로컬호스트)
B 클래스 -&amp;gt; 128~191.0.0.0
C 클래스 -&amp;gt; 192~223.0.0.0
D 클래스 -&amp;gt; 224~239.0.0.0

&lt;strong&gt;중요한 점은 클래스 기반으로는 사용하지 않는다는 점이다.&lt;/strong&gt;


클래스 기반보다 네트워크 주소를 세밀하게 분할하고 할당하기
위해서 네트워크 크기에 맞춰 1비트 단위로 네트워크를 상세히 분할하는 방법을 사용하는데요.
클래스 개념 자체를 버리는 클래스리스(Classless) 기반의 주소 체계를 사용합니다.
&lt;/pre&gt;

&lt;h2 id=&quot;클래스-리스&quot;&gt;클래스 리스&lt;/h2&gt;
&lt;p&gt;클래스리스에서는 구분자가 필요한데 이를 서브넷 마스크(Subnet Mask)라고 합니다.
넷 마스크는 IP주소를 네트워크 포션 / 호스트 포션으로 나누는데 사용되는 숫자 조합입니다. 서브넷 마스크는 IP 주소와 같은 길이의 비트로 구성되며,
이진수(Binary)로 표현했을 때 네트워크 포션은 1로, 호스트 포션은 0으로 설정됩니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;즉, 가령 210.100.100.1의 서브넷 마스크가 255.255.255.0이라면,
255.255.255.0은 1111 1111. 1111 1111. 1111 1111. 0000 0000과 같습니다.

여기서 1인 부분은 네트워크를, 0인 부분은 해당 네트워크 내에 속해있는 호스트를 나타내므로 IP주소와 서브넷 마스크를 논리적 AND 연산 결과 값이 바로 서브넷이 됩니다. 하나의 주소를 서브넷 마스크를 씌워서 작은 네트워크로 만드는 것을 서브넷팅(Subnetting)이라고 합니다.

210.100.100.1	=	1101 0010. 0110 0100. 0110 0100. 0000 0001	=	IP주소
255.255.255.0	=	1111 1111. 1111 1111. 1111 1111. 0000 0000	=	서브넷 마스크
210.100.100.0	=	1101 0010. 0110 0100. 0110 0100. 0000 0000	=	서브넷 (AND 연산 결과)

이러면 호스트와 네트워크의 경계를 알 수 있다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@su_bak/%EC%84%9C%EB%B8%8C%EB%84%B7-%EB%A7%88%EC%8A%A4%ED%81%AC-subnet-mask-%EB%9E%80-398ecdfd5c0d&quot;&gt;출처: medium.com&lt;/a&gt;
&lt;a href=&quot;https://yonlog.tistory.com/95#:~:text=%EC%84%9C%EB%B8%8C%EB%84%B7%20%EB%A7%88%EC%8A%A4%ED%81%AC%EB%8A%94%20IP%EC%A3%BC%EC%86%8C,%EC%9D%80%200%EC%9C%BC%EB%A1%9C%20%EC%84%A4%EC%A0%95%EB%90%A9%EB%8B%88%EB%8B%A4.&quot;&gt;출처: tistory.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;표기법&quot;&gt;표기법&lt;/h2&gt;
&lt;p&gt;일반적인 표기법으로는 CIDR 표기법이 사용되며, IP 주소 뒤에 슬래시와 비트 수를 숫자로 표기합니다. 
예를 들어, 192.168.0.0/24와 같이 나타낼 수 있으며,
이 표기법에서 192.168.0.0은 네트워크 ID를 의미하고,
/24는 서브넷 마스크의 길이를 나타냅니다. 24비트 서브넷 마스크는 첫 24비트가 네트워크 ID이고 나머지 8비트가 호스트 ID임을 의미합니다.&lt;/p&gt;

&lt;p&gt;따라서 192.168.0.0/24는 192.168.0.0부터 192.168.0.255 까지의 
IP 주소 범위를 나타냅니다. 여기서 네트워크 ID와 브로드캐스트 주소를 제외하고
실제로 호스트에 할당할 수 있는 IP 주소의 범위는 192.168.0.1 ~ 192.168.0.254가 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;본론&quot;&gt;본론&lt;/h2&gt;
&lt;p&gt;그래서 ip/32, ip/24는 무엇인가?
IP 주소의 범위를 표현하기 위한 방식이다. 이진수 몇 자리까지 고정값으로 두는지에 대한 정의다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Subnet&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Subnet Mask (Dec)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Host 수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.0.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16,777,216&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.128.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8,388,608&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.192.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4,194,304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/11&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.224.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2,097,152&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/12&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.240.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1,048,576&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/13&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.248.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;524,288&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/14&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.252.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;262,144&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/15&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.254.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;131,072&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/16&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;65,536&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/17&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.128.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32,768&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/18&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.192.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16,384&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/19&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.224.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8,192&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/20&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.240.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4,096&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/21&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.248.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2,048&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/22&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.252.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1,024&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/23&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.254.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;512&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/24&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;256&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/25&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.128&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;128&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/26&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.192&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/27&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.224&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/28&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.240&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/29&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.248&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/30&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.252&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/31&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.254&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/32&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.255&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[httpd Series] 01 Reverseproxy</title>
        <link>/apache/2024/05/22/httpd-series-01-ReverseProxy.html</link>
        <guid isPermaLink="true">/apache/2024/05/22/httpd-series-01-ReverseProxy.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/apache/01.ReverseProxy.md&quot;&gt;Dictionary - HTTPD CONFIG&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;reverseproxy&quot;&gt;ReverseProxy&lt;/h1&gt;

&lt;p&gt;Proxy는 Forward / Reverse Proxy 두가지가 있는데,
보통 Forward Proxy는 사내망 Client에서 외부에 있는 웹서버를 접근할 때 사용되며(미리 Proxy 지정이 필요함),
Reverse Proxy는 Client에서 웹서버에 접근 할 때, 내부망에 위치한 WAS서버를 대신하여 요청한 Request에 대해 Response를 하는 구조이다.&lt;/p&gt;

&lt;p&gt;아파치와 톰캣에 리버스 프록시(reverse proxy) 환경을 구축하는 이유는 톰캣에 올린 웹 서비스의 서버 ip를 외부 사용자로부터 감추기 위한 것이며(보안), 로드밸런싱 기능으로 트래픽 분산을 하여 서버의 가용성을 유지하기 위해서 인프라를 구성하기 위해서 이다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
	
	# Forward Proxy 경우 On / Reverse Proxy Off
	ProxyRequests Off

	# 호스트가 받은 HTTP 요청을 Proxy 요청시 사용
    # Reverse 경우 On으로 해야함
	ProxyPreserveHost On

	# Proxy에 연결할 URL 
    # ServerHost:localhost -&amp;gt; Apache -&amp;gt; ProxyPass URL
	ProxyPass / http://192.168.10.146:8080/service/ # 뒤에 슬래쉬는 붙여줘야함

	# WAS 가 redirect HTTP 응답을 보냈을 경우 Location, Content-Location HTTP 헤더를 수정 클라이언트에 전달한다.
	# reverse proxy가 이 헤더를 수정하지 않으면 클라이언트는 redirect 시 제대로 연결할 수 없으므로 꼭 설정해야 한다.
	ProxyPassReverse / http://192.168.10.146:8080/service/

	# 로드밸런싱 - 경로 분기
	&amp;lt;Location /html&amp;gt;
		ProxyPass http://192.168.10.146:8080/html/
		ProxyPassReverse http://192.168.10.146:8080/html/
	&amp;lt;/Location&amp;gt;
    
    &amp;lt;Location /user&amp;gt;
		ProxyPass http://192.168.10.146:8080/user/
		ProxyPassReverse http://192.168.10.146:8080/user/
	&amp;lt;/Location&amp;gt;
	
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[gradle Series] Summary</title>
        <link>/gradle/2024/05/22/gradle-series-Summary.html</link>
        <guid isPermaLink="true">/gradle/2024/05/22/gradle-series-Summary.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/gradle/Summary.md&quot;&gt;Dictionary - Gradle Summary&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;gradle-기본-정리&quot;&gt;Gradle 기본 정리&lt;/h1&gt;

&lt;h2 id=&quot;gradle&quot;&gt;Gradle?&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Groovy&lt;/code&gt;라는 도메인 언어를 사용하는 빌드 스크립트(태스크로 정의되는)로 정의된 빌드 도구이다. 추가적으로 종속성 관리를 지원한다.&lt;/p&gt;

&lt;h2 id=&quot;특징&quot;&gt;특징&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;유연성: Java, Kotlin, Android 등 다양한 프로그래밍 언어와 플랫폼을 지원한다.&lt;/li&gt;
  &lt;li&gt;성능 : Maven보다 효율적이며, 증분 빌드를 지원한다.&lt;/li&gt;
  &lt;li&gt;종속성 관리&lt;/li&gt;
  &lt;li&gt;빌드 라이프 사이클 관리 : 컴파일, 테스트, 배포를 위한 패키징까지 빌드 라이프사이클의 모든 단계를 지원&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;구성&quot;&gt;구성&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;빌드: 소스컴파일, 테스트 실행, 실행 파일 빌드, 배포를 위한 바이너리 패키징 등 소프트웨어 개발의 다양한 단계를 자동화하는 작업 또는 일련의 작업,
이는 빌드 스크립트에 정의되며, Gradle DSL로 작성되며 보통 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build.gradle&lt;/code&gt;로 명명된다.&lt;/li&gt;
  &lt;li&gt;태스크: Gradle의 기본 작업 단위, 고유한 이름을 가질 수 있다.&lt;/li&gt;
  &lt;li&gt;플러그인: 빌드 스크립트에 추가하여 추가 기능을 제공할 수 있게 하는 재사용 가능한 기능
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;plugins {
 id 'java'
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;구성: 프로젝트를 위한 종속성이 명명된 집합, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;compile&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testCompile&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;testRuntime&lt;/code&gt; 등 여러 유형을 지원한다.
``` groovy
dependencies {
 compile ‘junit:junit:5.0.1’ ## 컴파일 단계에서 사용 , deprecated된 구성
 runtime .. ## 애플리케이션 실행에서 사용, 컴파일에는 중요하지 않지만 애플리케이션 실행에는 필요한 경우
 implementation … ## 소스코드를 구현하는 데 필요한 종속성에 사용, 컴파일, 런타임에 모두 종속성 사요 가능
 testImplementation … ## 소스코드를 테스트에 사용&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;}&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;5. 레포지토리: 의존성을 다운로드할 수 있는 위치를 명명한다. `mavenCenter()`, `jcenter()`등이 있다.
6. 프로젝트: 소프트웨어 애플리케이션 또는 구성 요소를 나타내는 엔티

## 빌드 스크립트 구조
- 태스크: gradle이 실행해야하는 작업을 정의한다. 
```groovy
task clean(type: Delete) {
    delete rootProject.buildDir
}

task build(type: Jar) {
    from sourceSets.main.output
    archiveBaseName.set(appName)
    archiveVersion.set(version)
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;ul&gt;
  &lt;li&gt;소스셋: 소스코드가 포함된 디렉토리를 정의한다.
    &lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'src/main/java'&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'src/main/resources'&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;java&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'src/test/java'&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;resources&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;srcDir&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'src/test/resources'&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;태스크&quot;&gt;태스크&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;javaCompile: 자바 소스 코드를 클래스로 컴파일한다. 소스 및 대상 호환성, 클래스 경로, 종속성 등과 같은 옵션을 지원
    &lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;compileJava&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JavaCompile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sourceCompatibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;targetCompatibility&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;1.8&lt;/span&gt;
    
  &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;srcDirs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;options&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;compilerArgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;-classpath&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;test: 테스트를 실행한다.
    &lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;testClassesDirs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;classesDirs&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runtimeClasspath&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;reports&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;destination&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;${buildDir}/test-results&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;jar: JAR를 생성한다.
    &lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;buildJar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Jar&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;baseName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'myproject'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'1.0'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;output&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;JavaExec: 자파 프로그램 실행
    &lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;runMain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JavaExec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;classpath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sourceSets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;runtimeClasspath&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'com.example.Main'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'arg1'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'arg2'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;Copy: 소스 디렉토리에서 대상 디렉토리로 파일 및 디렉토리를 복사한다.
    &lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;copyFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;type:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'src/main/resources'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'build/resources/main'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'**/*.properties'&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;replaceAll&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'FOO'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'BAR'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;태스크의-순서&quot;&gt;태스크의 순서&lt;/h2&gt;
&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;task&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;myTask&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doFirst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// runs before any other actions&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;doLast&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// runs after all actions are complete&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;finalizedBy&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;anotherTask&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dependsOn&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;someTask&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;someTask -&amp;gt; doFirst -&amp;gt; task -&amp;gt; doLast -&amp;gt; anotherTask 순으로 실행된다.&lt;/p&gt;

&lt;h3 id=&quot;태스크-옵션&quot;&gt;태스크 옵션&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-D&lt;/code&gt; : 작업 구성 또는 종료에서 액세스할 수 있는 시스템 속성을 정의&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-P&lt;/code&gt; : 프로젝트 객체 또는 작업의 클로저에서 액세스할 수 있는 프로젝트 속성을 정의&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-x&lt;/code&gt; : 작업을 제외한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;gradle-properties&quot;&gt;Gradle Properties&lt;/h2&gt;
&lt;p&gt;빌드 프로세스의 다양한 측면을 구성하는 데 사용하는 Key:Value 쌍 빌드스크립트 전체에서 액세스할 수 있다.&lt;/p&gt;

&lt;p&gt;gradle.properties&lt;/p&gt;
&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;appName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;1.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;home&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/usr/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;share&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/java/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[git Series] 03 Convention</title>
        <link>/git/2024/05/22/git-series-03-Convention.html</link>
        <guid isPermaLink="true">/git/2024/05/22/git-series-03-Convention.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/git/03.Convention.md&quot;&gt;Dictionary - Convention&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;convention&quot;&gt;Convention&lt;/h1&gt;

&lt;h2 id=&quot;메시지-컨베션&quot;&gt;메시지 컨베션&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;제목과 본문을 한 줄 띄워서 분리하기&lt;/li&gt;
  &lt;li&gt;제목은 영문 기준 50자 이내&lt;/li&gt;
  &lt;li&gt;제목 첫 글자는 대문자&lt;/li&gt;
  &lt;li&gt;제목 끝 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.&lt;/code&gt; 금지&lt;/li&gt;
  &lt;li&gt;본문은 무엇, 왜에 맞춰 작성&lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
  &lt;p&gt;태그: 제목
(한 줄 띄우기)
본문
(한 줄 띄우기)
꼬리말&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;태그&quot;&gt;태그&lt;/h2&gt;
&lt;p&gt;|     TagName      |                          Description                          |
|:—————-:|:————————————————————-:|
|       Feat       |                           새로운 기능 추가                           |
|       Fix        |                             버그 수정                             |
|      Design      |                        CSS, UI 디자인 변경                         |
| !BREAKING CHANGE |                           큰 API 변경                            |
|     !HOTFIX      |                            HOTFIX                             |
|      Style       |               코드 포맷 변경, 세미 콜론 누락, 코드 수정이 없는 경우                |
|     Refactor     |                         프로덕션 코드 리팩토링                          |
|     Comment      |                        필요한 주석 추가 및 변경                         |
|       Docs       |                             문서 수정                             |
|       Test       |         테스트 코드, 리펙토링 테스트 코드 추가 (ProductionCode 변경 X)          |
|      Chore       | 빌드 업무 수정, 패키지 매니저 수정, 패키지 관리자 구성 등 업데이트 (ProductionCode 변경 X) |
|      Rename      |                          파일/ 폴더명 수정                           |
|      Remove      |                             파일 삭제                             |&lt;/p&gt;

&lt;h2 id=&quot;깃-모지&quot;&gt;깃 모지&lt;/h2&gt;
&lt;p&gt;| Git moji |  코드   | 설명|
|:——–:|:—–:|:—-:|
|    🎨    | :art: |코드의 구조/형태 개선|
|    ⚡     |:zap:|성능 개선|
|    🔥    |:fire:|코드/파일 삭제|
|    🐛    |:bug:|버그 수정|
|    ✨     |:sparkles:|새 기능|
|    📝    |:memo:|문서 추가/수정|
|    💄    |:lipstick:|UI/스타일 파일 추가/수정|
|    🎉    |:tada:|프로젝트 시작|
|    ✅     |:white_check_mark:|테스트 추가/수정|
|    🔒    |:lock:|보안 이슈 수정|
|    🔖    |:bookmark:|릴리즈/버전 태그|
|    💚    |:green_heart:|CI 빌드 수정|
|    📌    |:pushpin:|특정 버전 의존성 고정|
|    👷    |:construction_worker:|CI 빌드 시스템 추가/수정|
|    📈    |:chart_with_upwards_trend:|분석, 추적 코드 추가/수정|
|    ♻     |:recycle:|코드 리팩토링|
|    ➕     |:heavy_plus_sign:|의존성 추가|
|    ➖     |:heavy_minus_sign:|의존성 제거|
|    🔧    |:wrench:|구성 파일 추가/삭제|
|    🔨    |:hammer:|개발 스크립트 추가/수정|
|    🌐    |:globe_with_meridians:|국제화/현지화|
|    💩    |:poop:|똥싼 코드|
|    ⏪     |:rewind:|변경 내용 되돌리기|
|    🔀    |:twisted_rightwards_arrows:|브랜치 합병|
|    📦    |:package:|컴파일된 파일 추가/수정|
|    👽    |:alien:|외부 API 변화로 인한 수정|
|    🚚    |:truck:|리소스 이동, 이름 변경|
|    📄    |:page_facing_up:|라이센스 추가/수정|
|    💡    |:bulb:|주석 추가/수정|
|    🍻    |:beers:|술 취해서 쓴 코드|
|    🗃    |:card_file_box:|데이버베이스 관련 수정|
|    🔊    |:loud_sound:|로그 추가/수정|
|    🙈    |:see_no_evil:| .gitignore 추가/수정|&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[git Series] 02 Summary</title>
        <link>/git/2024/05/22/git-series-02-Summary.html</link>
        <guid isPermaLink="true">/git/2024/05/22/git-series-02-Summary.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/git/02.Summary.md&quot;&gt;Dictionary - Summary&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;config&quot;&gt;config&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;c&quot;&gt;# 현재 위치에서 지역 저장소를 생성&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git init

 &lt;span class=&quot;c&quot;&gt;# 깃 환경에서 사용자 이름을 [사용자명]으로 지정&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.name &lt;span class=&quot;s2&quot;&gt;&quot;[사용자명]&quot;&lt;/span&gt;

 &lt;span class=&quot;c&quot;&gt;# 깃 환경에서 사용자 이메일을 [사용자이메일명]으로 지정&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git config &lt;span class=&quot;nt&quot;&gt;--global&lt;/span&gt; user.email &lt;span class=&quot;s2&quot;&gt;&quot;[사용자이메일명]&quot;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;stage&quot;&gt;stage&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# [파일명.확장자명]을 스테이지에 올림&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;파일명.확장자명]

  &lt;span class=&quot;c&quot;&gt;# 상태를 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git status

  &lt;span class=&quot;c&quot;&gt;# 파일 add 취소&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git restore &lt;span class=&quot;nt&quot;&gt;--staged&lt;/span&gt; 파일명

  &lt;span class=&quot;c&quot;&gt;# 전체 add 취소&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset HEAD
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h1 id=&quot;commit&quot;&gt;commit&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# 커밋 메시지 [메시지명]을 붙여 커밋&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[메시지명]&quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;-am&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;[메시지명]&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 스테이징과 커밋을 동시에 진행&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 최근 순서대로 커밋을 취소&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset HEAD^ &lt;span class=&quot;c&quot;&gt;# 현재 HEAD의 이전 커밋으로 되돌리기&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset HEAD~n &lt;span class=&quot;c&quot;&gt;# 현재로 부터 n 번째 이전 커밋으로 되돌리기&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 롤백할 커밋을 지정&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋 해시]

&lt;span class=&quot;c&quot;&gt;# - reset의 3가지 옵션&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset &lt;span class=&quot;nt&quot;&gt;--soft&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋ID]  &lt;span class=&quot;c&quot;&gt;# head 만 바뀜&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset &lt;span class=&quot;nt&quot;&gt;--mixed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋ID] &lt;span class=&quot;c&quot;&gt;# staging 도 그 때로 바뀜&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git reset &lt;span class=&quot;nt&quot;&gt;--hard&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋ID] &lt;span class=&quot;c&quot;&gt;# working디렉토리/staging 모두 그 때로 바꿈 &lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 커밋을 삭제하지않고 이전 커밋을 새로 복사 추가하는 식으로 롤백&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git revert &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋 해시] &lt;span class=&quot;c&quot;&gt;# 해당 커밋 이전상태로 되돌린다라는 명령&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 커밋 수정하는 법&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# ... 파일 수정 한 뒤&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git add &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git commit &lt;span class=&quot;nt&quot;&gt;--amend&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 최신 커밋 수정&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;log&quot;&gt;log&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# 커밋 내역 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log           &lt;span class=&quot;c&quot;&gt;# 전체 이력을 보여준다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git shortlog     
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &lt;span class=&quot;nt&quot;&gt;--oneline&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 커밋과 커밋 메시지를 조회&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt;        &lt;span class=&quot;c&quot;&gt;# 이력을 보여줄 때, 변경된 데이터도 보여준다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;filename] &lt;span class=&quot;c&quot;&gt;# 특정 파일에 대한 이력을 보여준다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;filename] &lt;span class=&quot;c&quot;&gt;# 특정 파일의 이력과 변경된 데이터를 보여준다.&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &lt;span class=&quot;nt&quot;&gt;--stat&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# 커밋마다 파일의 추가/삭제된 통계데이터를 보여줌&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git log &lt;span class=&quot;nt&quot;&gt;--graph&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# 브랜치 분기 및 병합내용을 아스키 그래프로 보여줌&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 특정 커밋 내역 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git show &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋 &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 최근 버전과 작업 폴더의 수정 파일 사이의 차이를 출력&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff               &lt;span class=&quot;c&quot;&gt;# modified 상태의 file과 마지막 commit 비교&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff &lt;span class=&quot;nt&quot;&gt;--staged&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;# staged 상태의 file과 마지막 commit 비교&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff &lt;span class=&quot;nt&quot;&gt;--color-words&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 변경사항을 color 풀하게 비교&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;브랜치이름]    &lt;span class=&quot;c&quot;&gt;# 현재브랜치와 선택된 브랜치와 차이점 비교&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;이전커밋 &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;이후커밋 &lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 커밋 비교&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;( Alias git config --global alias.graph 'log --oneline --graph --all --decorate' )&lt;/code&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;git log 명령어 예시&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git log&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;HEAD와 관련된 commit들이 자세하게 나옴&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git log –oneline&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;간단히 commit 해시와 제목만 보고 싶을 때&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git log –oneline –graph –decorate&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;HEAD와 관련된 commit들을 조금 더 자세히 보고 싶을 때&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git log –oneline –graph –all –decorate&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;모든 branch들을 보고 싶을 때 사용하는 명령어&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git log –oneline -n7&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;내 branch의 최신 commit을 7개만 보고 싶을 때 사용&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;remote&quot;&gt;remote&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# 원격 저장소에 연결&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote add origin &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;github 레포지 주소]

  &lt;span class=&quot;c&quot;&gt;# 옵션 종류 보기&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# 추가한 원격저장소의 목록 확인 &lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 상세히&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# 특정 원격 저장소의 정보를 확인할 수 있다.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote show 이름

  &lt;span class=&quot;c&quot;&gt;# 원격저장소 이름 변경&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote rename 기존이름 변경할이름

  &lt;span class=&quot;c&quot;&gt;# 원격저장소를 제거&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;이름

  &lt;span class=&quot;c&quot;&gt;# 지역 저장소의 커밋을 맨 처음 원격 저장소에 올리는 경우&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; origin master

  &lt;span class=&quot;c&quot;&gt;# -u로 등록한 후에 지역 저장소의 커밋을 원격 저장소에 올리는 경우(업로드)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git push origin master


  &lt;span class=&quot;c&quot;&gt;# 원격 저장소의 커밋을 지역 저장소로 가져옴&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull origin master

  &lt;span class=&quot;c&quot;&gt;# 원격 저장소 복제하기&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;원격 저장소 주소]

  &lt;span class=&quot;c&quot;&gt;# 원격 저장소의 커밋을 가져오기만 하고 merge하지 않는다&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git fetch
&lt;span class=&quot;c&quot;&gt;# 이후엔 diff 로 비교&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git diff &lt;span class=&quot;nb&quot;&gt;test &lt;/span&gt;origin/test &lt;span class=&quot;c&quot;&gt;# 브랜치 이름이 test일 경우 예시&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 원격저장소 삭제(끊기)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git remote remove origin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;remove&quot;&gt;remove&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# 로컬저장소 원격저장소 둘다 파일 삭제&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;filename]    

  &lt;span class=&quot;c&quot;&gt;# 원격저장소 파일만 삭제. 로컬저장소 파일은 냅둠&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--cached&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;filename]

&lt;span class=&quot;c&quot;&gt;# -rf (recursive, force)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;branch&quot;&gt;branch&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# 브랜치 확인&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch               

  &lt;span class=&quot;c&quot;&gt;# 브랜치 추가 / 삭제&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch name]  
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git branch &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch name] &lt;span class=&quot;c&quot;&gt;# -delete&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# 브랜치로 이동&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git switch &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch name]
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch name]

  &lt;span class=&quot;c&quot;&gt;# 브랜치 추가하고 바로 이동&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git switch &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch name]
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch name]


  &lt;span class=&quot;c&quot;&gt;# 현재 브랜치에서 다른 브랜치를 merge&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git merge &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;branch name]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;cherry-pick&quot;&gt;cherry-pick&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# 만일 내가 X 브랜치에 있고&lt;/span&gt;
   &lt;span class=&quot;c&quot;&gt;# 브랜치 Y의 커밋 중 76ae30ef와 13af32cc만 골라 현재 브랜치인 X에 적용하고 싶을때&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git cherry-pick 76ae30ef 13af32cc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;stash&quot;&gt;stash&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# staged, modified 상태의 파일을 저장&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash     

  &lt;span class=&quot;c&quot;&gt;# stash로 저장한 리스트를 출력&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash list         

  &lt;span class=&quot;c&quot;&gt;# 가장 최근에 저장한 stash를 반영&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash apply      
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash apply stash@&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 지정한 stash를 반영&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# 지정한 stash를 삭제&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash drop stash@&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;1&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c&quot;&gt;# stash를 반영하고 자동 삭제&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git stash pop
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;tag&quot;&gt;tag&lt;/h1&gt;
&lt;ul&gt;
  &lt;li&gt;light weight 태그 : 단순 커밋 태그용. 커밋을 바로 가리킴&lt;/li&gt;
  &lt;li&gt;annotated 태그 : 태그 메세지도 첨부할수 있어 자체 해시값을 가짐. ^{}이 커밋을 가리킴&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;c&quot;&gt;# 태그 추가&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git tag &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;태그이름]           
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git tag &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;태그이름] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋번호]  &lt;span class=&quot;c&quot;&gt;# 특정 해쉬에 태그 추가&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git tag &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;태그이름] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;커밋번호] &lt;span class=&quot;c&quot;&gt;# 특정 해쉬에 annotated 태그 추가&lt;/span&gt;


  &lt;span class=&quot;c&quot;&gt;# 태그 조회&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git tag
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git tag &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'v1.*'&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 와일드카드 패턴으로 검색조회&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git show &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;태그이름]  &lt;span class=&quot;c&quot;&gt;# 특정 태그 조회&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git show-ref &lt;span class=&quot;nt&quot;&gt;--tags&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 해쉬값과 태그 조회&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;blame&quot;&gt;blame&lt;/h1&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# git 프로젝트에서 어떤 코드를 누가 수정했는지, 어떤 commit으로 수정이 되었는지 궁금할 때&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#  해당 파일에 대한 모든 수정 내역&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git blame &amp;lt;파일명&amp;gt;

&lt;span class=&quot;c&quot;&gt;#  author name과 timestamp는 출력하지 않음.&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git blame &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &amp;lt;파일명&amp;gt;

&lt;span class=&quot;c&quot;&gt;#  description과 수정사항을 보여줌&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git show &amp;lt;커밋번호&amp;gt;

&lt;span class=&quot;c&quot;&gt;#  파일내용을 start부터 end 라인까지의 수정 내역만 보여줌&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git blame &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; &amp;lt;start,end&amp;gt; &amp;lt;파일명&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;cite&gt; https://inpa.tistory.com/entry/GIT-⚡%EF%B8%8F-핵심-명령어-요약-🚩-총정리 &lt;/cite&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[git Series] 01 Command</title>
        <link>/git/2024/05/22/git-series-01-command.html</link>
        <guid isPermaLink="true">/git/2024/05/22/git-series-01-command.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/git/01.command.md&quot;&gt;Dictionary - Command&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;log&quot;&gt;log&lt;/h1&gt;
&lt;p&gt;git log –all –oneline –graph : 그래프 확인&lt;/p&gt;

&lt;h1 id=&quot;remote&quot;&gt;Remote&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git remote -v&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;워킹 트리에 등록돼 있는 원격 저장소 목록 노출&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git remote add [remoteName] [remoteUrl]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;원격 저장소를 지정한 이름으로 등록&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git remote rename [prevName] [newName]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;원격 저장소의 이름을 새로운 이름으로 변경&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git remote remove [remoteName]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;지정한 원격저장소를 삭제&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;fetch-pull-push&quot;&gt;fetch/ pull/ push&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git fetch [remoteName] [branchName]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;원격 저장소의 커밋과 브랜치, 태그들의 로컬 저장소를 가져온다.&lt;br /&gt; 워킹 트리의 내용이 변하지 않는다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git pull [remoteName] [branchName]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;fetch + merge&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git push [-u remoteName, branchName]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;해당 브랜치의 커밋을 원격 저장소로 업로드한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git push [remoteName] –all&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;로컬 저장소의 모든 브랜치와 커밋들을 한꺼번에 원격저장소로 업로드한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git push [remoteName] –tags&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;로컬 저장소의 모든 태그들을 원격 저장소로 업로드한다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;clean-working-tree&quot;&gt;clean working tree&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git clean  -f -d [file or folderName]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;untracked 상태 파일을 삭제한다. 파일 또는 경로 명시하지 않으면 모든 untracked를 정리&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;reset&quot;&gt;reset&lt;/h1&gt;
&lt;p&gt;|           command            |                             description                             |
|:—————————-:|:——————————————————————-:|
| git reset –hard [checksum]  |         hard reset이라고 부른다. 해당 커밋으로 돌리고 싶을 때 사용, 워킹 트리도 초기화          |
| git reset –mixed [checksum] |               옵션이 없으면 mixed가 기본, 워킹 트리는 남고 스테이지만 초기화                |
| git reset –soft [checksum]  | soft reset이라고 부르고 HEAD만 이동한다.  커밋은 돌아가지만 스테이지와 워킹 트리의 내용은 변경되지 않는다. |&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;구분&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;soft&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;mixed(기본)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;hard&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;현재 브랜치 (HEAD)&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;초기화&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;초기화&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;초기화&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;스테이지&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;남아있음&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;초기화&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;초기화&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;워킹트리 변경사항&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;남아있음&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;남아있음&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;초기화&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;reflog&quot;&gt;reflog&lt;/h1&gt;

&lt;p&gt;reflog는 로컬 저장소의 커밋 또는 브랜치의 변경 사항을 기록해 놓은 로그를 의미한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git reflog [-n 숫자]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;relog를 보여주는 명령 -n 숫자로 갯수를 제한해서 볼 수 있다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;amend&quot;&gt;amend&lt;/h1&gt;
&lt;p&gt;이건 커밋을 고칠 때는 –amend를 사용하면 된다. 이를 사용하는 경우는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;HEAD가 가리키는 커밋, 즉 현재 커밋을 수정하고 싶을 때&lt;/li&gt;
  &lt;li&gt;커밋 메시지를 바꾸고자 할 때&lt;/li&gt;
  &lt;li&gt;이전 커밋의 파일 내용을 수정하고 싶을 때&lt;/li&gt;
  &lt;li&gt;이전 커밋에 중요 파일을 추가하지 않은 경우&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;diff&quot;&gt;diff&lt;/h1&gt;

&lt;p&gt;변경 사항을 비교할 때 사용한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;git diff [a] [b]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;a를 토대로 b에 추가된 차이를 보여준다. 옵션을 생략하면 &lt;br /&gt;아직 스테이지에 추가되지 않은 변경 사항을 보여주는데, 신규 파일(untracked)는 보여주지 않는다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;git-diff-check&quot;&gt;git diff –check&lt;/h1&gt;
&lt;p&gt;공백 문자를 체크하는데 유용하게 사용할 수 있는 명령어다.&lt;/p&gt;

&lt;h1 id=&quot;-x&quot;&gt;-X&lt;/h1&gt;
&lt;p&gt;merge나 rebase에 -X [ours|theirs]를 사용하면 어떤 것을 기준으로 작업할지 정할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;rebase--iinteractive&quot;&gt;rebase -i[–interactive]&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git rebase -i &lt;수정 하려는=&quot;&quot; 커밋들의=&quot;&quot; 부모=&quot;&quot; 커밋=&quot;&quot;&gt;&lt;/수정&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;HEAD와 지정한 커밋 사이의 커밋들의 히스토리를 수정한다. 옵션으로 지정한 커밋은 수정에서 제외되고 후손들만 편집이 가능하다.&lt;br /&gt; &lt;br /&gt; p( pick ) : 해당 커밋을 그대로 변경 없이 사용 &lt;br /&gt; r( reword ) : 해당 커밋을 사용. 단 커밋 메시지를 편집 &lt;br /&gt; e( edit ) : 해당 커밋을 사용 단 커밋을 수정할 수 있도록 된다. &lt;br /&gt; s( squash ) : 커밋을 사용. 단 내용은 부모 커밋에 합쳐지고 커밋은 사라진 것처럼 보임 &lt;br /&gt; d ( drop ) : 해당 커밋을 제거&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;cherry-pick&quot;&gt;cherry-pick&lt;/h1&gt;
&lt;p&gt;git cherry-pick은 다른 브랜치에 있는 특정 커밋을 골라 현재 브랜치에 합칠 때 사용한다.&lt;/p&gt;

&lt;h1 id=&quot;stash&quot;&gt;stash&lt;/h1&gt;
&lt;p&gt;작업 폴더의 변경 내용을 넣어두는 명령어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git stash&lt;/code&gt;를 사용하면 stash 스택(.git/refs/stash)에 저장한다.
stash는 변경사항을 커밋하기도, 삭제하기도 애매한 상황에서 사용한다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git stash [-u]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;변경 사항을 스택에 저장하고 현재 작업 폴더를 clean 상태로 만든다. -u를 사용하면 untracked도 저장한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git stash list&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;stash 리스트를 확인하다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git stash pop [stash 객체]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;stash 스택에 있는 변경사항을 현재 작업 폴더에 반영한다. 반영된 stash는 제거한다. 옵션을 붙이면 해당 객체를 아니면 마지막의 객체를 꺼내온다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git stash apply [stash 객체]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;pop과 유사하지만 스택에서 제거하지는 않는다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git stash drop [stash 객체]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;지정한 stash를 제거한다.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git stash clear&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;스택의 모든 stash를 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git stash branch [stash 객체]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;마지막 체크아웃된 커밋에 stash 내용 반영해서 새로운 브랜치 생성 (테스트 할 떄 유용)&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;blockquote&gt;
  &lt;p&gt;다른 브랜치에서 작업했을 때?
git status -u
git checkout -b temporaryBranch
git stash pop&lt;/p&gt;

&lt;/blockquote&gt;

&lt;h1 id=&quot;add&quot;&gt;add&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git add –patch [fileName]&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;변경 사항의 일부만 커밋하고 싶을 때 사용할 수 있다.&lt;br /&gt;&lt;br /&gt; ? : 도움말 &lt;br /&gt;y: 현재 변경사항(hunk)를 스테이징 &lt;br /&gt;n: 현재 변경 사항을 스테이징 하지 않는다. &lt;br /&gt;e: 직접 스테이지에 올릴 내용을 편집&lt;br /&gt; q: 변경 사항을 무시하고 종료&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;untracked-파일-일부-변경-사항-커밋&quot;&gt;untracked 파일 일부 변경 사항 커밋&lt;/h2&gt;
&lt;p&gt;| command                | description                                      |
|:———————–|:————————————————-|
| git add –N [fileName] | untracked 상태의 파일을 스테이지에 올린다. 단 내용은 올리지 않고 상태만 변경 |&lt;/p&gt;

&lt;h2 id=&quot;add-interactive--i&quot;&gt;add –interactive [-i]&lt;/h2&gt;
&lt;p&gt;add에 인터렉티브한 작업을 선택할 수 있다.&lt;/p&gt;

&lt;h1 id=&quot;git-blame으로-히스토리-조회&quot;&gt;git blame으로 히스토리 조회&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;command&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;git blame [-L &amp;lt;시작줄, 끝줄&amp;gt;] &lt;fileName&gt;&lt;/fileName&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;해당 파일을 변경했던 커밋 히스토리를 보여준다. -L로 시작 - 끝 줄을 지정하고 특정 범위만 조회할 수도 있다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h1 id=&quot;filter-branch로-히스토리-파일-삭제&quot;&gt;filter-branch로 히스토리 파일 삭제&lt;/h1&gt;
&lt;p&gt;| command                                                 | description                 |
|:——————————————————–|:—————————-|
| git filter-branch –tree-filter ‘rm -f &lt;fileName&gt;' HEAD | HEAD로부터 모든 히스토리에 지정한 파일을 삭제 |&lt;/fileName&gt;&lt;/p&gt;

&lt;h1 id=&quot;git-alias&quot;&gt;git alias&lt;/h1&gt;
&lt;p&gt;단축 명령어 생성&lt;/p&gt;

&lt;p&gt;git config –global alias.st status 
-&amp;gt; git st (==git status)&lt;/p&gt;

&lt;p&gt;git config –global alias.graph “ log –oneline –graph –all “
-&amp;gt; git graph -n5&lt;/p&gt;

&lt;h1 id=&quot;global-ignore&quot;&gt;global ignore&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;ignore 생성&lt;/li&gt;
  &lt;li&gt;git conifg –global core.excludesfiles ~/path&lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;git-reflog&quot;&gt;git reflog&lt;/h1&gt;
&lt;p&gt;checkout, commit들에 대한 내역을 볼 수 있다.
만일 local에 commit만 하고 reset –hard를 했다면 reflog로 찾아서 git reset –hard [revisionNumber]로 되돌려 놓을 수 있다.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[ci:cd Series] 02 Deploy</title>
        <link>/ci/cd/2024/05/22/ci-cd-series-02-Deploy.html</link>
        <guid isPermaLink="true">/ci/cd/2024/05/22/ci-cd-series-02-Deploy.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/cicd/02.Deploy.md&quot;&gt;Dictionary - Deploy&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;deploy&quot;&gt;Deploy&lt;/h1&gt;
&lt;h2 id=&quot;1-rolling&quot;&gt;1. Rolling&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/cicd.png&quot; alt=&quot;Rolling.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;kubernetes에서 공부했던 Rolling이다. 하나씩 변경점을 반영하며 전파되는 형식
단점으로 부하 계산을 잘못하면 문제가 될 수 있다.  (70, 70, 70) -&amp;gt; (0, 105, 105)&lt;/p&gt;

&lt;h2 id=&quot;2-bluegreen&quot;&gt;2. BlueGreen&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/cicd1.png&quot; alt=&quot;BlueGreen.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;일전에 jojoldu의 책에서 nginx로 새로운 서버로 포트만 바꿔주던 식의 신, 구 서버 스위칭 형식이다. 
단점으로 구/ 신버전을 모두 유지해야 하므로 리소스가 2배가 된다.&lt;/p&gt;

&lt;h2 id=&quot;3-canary&quot;&gt;3. Canary&lt;/h2&gt;
&lt;p&gt;독가스 검사하는 카나리아에서 차용한 듯
&lt;img src=&quot;/assets/img/cicd2.png&quot; alt=&quot;Canary.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;특정 서버만 배포하고 배포된 서버로 트래픽을 늘려서 문제가 없으면
점진적 배포를 하는 방식이다. 결과적으로 모든 서버에 배포한다.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[ci:cd Series] 01 Cicd</title>
        <link>/ci/cd/2024/05/22/ci-cd-series-01-CICD.html</link>
        <guid isPermaLink="true">/ci/cd/2024/05/22/ci-cd-series-01-CICD.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/cicd/00.CICD.md&quot;&gt;Dictionary - CI/CD&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;cicd&quot;&gt;CI/CD&lt;/h1&gt;
&lt;h2 id=&quot;junit&quot;&gt;&lt;a href=&quot;https://newkayak12.github.io/java/2024/05/18/java-series-24-Junit.html&quot;&gt;Junit&lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;기본-개념&quot;&gt;기본 개념&lt;/h2&gt;
&lt;h3 id=&quot;pipeline&quot;&gt;pipeline&lt;/h3&gt;
&lt;p&gt;일련의 Job으로 구성된 단위이다.&lt;/p&gt;

&lt;h3 id=&quot;job&quot;&gt;Job&lt;/h3&gt;
&lt;p&gt;파이프 라인을 구성하는 최소 작업 단위다.&lt;/p&gt;

&lt;h3 id=&quot;variables&quot;&gt;Variables&lt;/h3&gt;
&lt;p&gt;Job에서 사용하거나 다른 곳에 재사용 할 때 지정할 수 있는 환경 변수의 한 유형이다.&lt;/p&gt;

&lt;h3 id=&quot;runner&quot;&gt;Runner&lt;/h3&gt;
&lt;p&gt;pipeline을 따라 Job을 실행시키는 주체다. 러너의 종류로는 1. 공유 러너, 2. 그룹 러너, 3. 지정 러너가 있다.&lt;/p&gt;

&lt;h3 id=&quot;artifacts&quot;&gt;Artifacts&lt;/h3&gt;
&lt;p&gt;일련의 단계에서 나온 산출물이다.&lt;/p&gt;

&lt;h3 id=&quot;예시&quot;&gt;예시&lt;/h3&gt;
&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;## 파이프라인의 단계&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;stages&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;packing&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;deploy&lt;/span&gt;


&lt;span class=&quot;c1&quot;&gt;## 해당 파이프라인에서 사용할 로컬 변수&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;STAGE_TARGET_PATH&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/service&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;STAGE_NAME&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$STAGE_NAME&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;STAGE_TARGET_SERVER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$STAGE_TARGET_SERVER&lt;/span&gt;


  &lt;span class=&quot;c1&quot;&gt;##Job&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;## 단계&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##어떤 이미지를 사용 할 것이며&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gradle-8.6.0-jdk17&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##어떤 상황에서 실행되는가&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##트리거가 되는 브랜치&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stage&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##태그&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test_work&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pwd&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod +x gradlew&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo [INFO] TEST PROJECT $CI_PROJECT_NAME&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./gradlew test&lt;/span&gt;




&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;##Job&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;## 단계&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##어떤 이미지를 사용 할 것이며&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;gradle:7.6-jdk11-alpine&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##어떤 상황에서 실행되는가&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;on_success&lt;/span&gt; 
  &lt;span class=&quot;c1&quot;&gt;## 선행되어야만 하는 작업&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;needs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;test&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##트리거가 되는 브랜치&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stage&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;##job에 대한 태그&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build_work&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# 스크립트 이전 실행&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;before_script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;pwd&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;## 자바HOME을 유동적으로 변경(Gradle -&amp;gt; 2024-05-22-[gradle-series]-Summary.md)&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cp $JAVA_HOME_11 gradle.properties&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod +x gradlew&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./gradlew clean&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;#스크립트&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo [INFO] BUILD PROJECT $CI_PROJECT_NAME&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./gradlew generateDbJooqSchemaSource&quot;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./gradlew -x generateDbJooqSchemaSource bootjar  --continue&quot;&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo [INFO] RENAME FILE&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cp build/libs/*.jar $CI_PROJECT_NAME.jar&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;## 빌드 결과물을 저장할 아티팩트&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;paths&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build/libs/*.jar&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;expire_in&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;1 days&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;deploy&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;needs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;on_success&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;stage&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo [INFO] DEPLOY STAGE_MODE $CI_PROJECT_NAME&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo [INFO] move to ${STAGE_TARGET_SERVER}&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cp build/libs/*.jar $CI_PROJECT_NAME.jar&lt;/span&gt;
     &lt;span class=&quot;s&quot;&gt;## 파일로 된 전역 변수 가져와서&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat $STAGE_TARGET_SERVER_KEY&lt;/span&gt; 
    &lt;span class=&quot;c1&quot;&gt;##권한 하향&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;chmod 400 $STAGE_TARGET_SERVER_KEY&lt;/span&gt;
      
      &lt;span class=&quot;s&quot;&gt;## 파일 만들고 전송하고 하는 일련의 과정&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo ssh -i $STAGE_TARGET_SERVER_KEY ${STAGE_NAME}@${STAGE_TARGET_SERVER} mkdir -p ${STAGE_TARGET_PATH}&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh -i  $STAGE_TARGET_SERVER_KEY ${STAGE_NAME}@${STAGE_TARGET_SERVER} mkdir -p ${STAGE_TARGET_PATH}&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh -i  $STAGE_TARGET_SERVER_KEY ${STAGE_NAME}@${STAGE_TARGET_SERVER} &amp;lt;&amp;lt; EOT&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd ${STAGE_TARGET_PATH}&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;exist=`ls | grep $CI_PROJECT_NAME.jar | wc -l`&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;if [ $exist &amp;gt; 0 ]&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;then&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo create backupFile as $CI_PROJECT_NAME.jar_{CI_COMMIT_TIMESTAMP}&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;mv ${STAGE_TARGET_PATH}/$CI_PROJECT_NAME.jar ${STAGE_TARGET_PATH}/$CI_PROJECT_NAME.jar_${CI_COMMIT_TIMESTAMP}&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;fi&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scp -i  $STAGE_TARGET_SERVER_KEY $CI_PROJECT_NAME.jar ${STAGE_NAME}@${STAGE_TARGET_SERVER}:${STAGE_TARGET_PATH}&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat $START&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;scp -i  $STAGE_TARGET_SERVER_KEY $START ${STAGE_NAME}@${STAGE_TARGET_SERVER}:${STAGE_TARGET_PATH}/start.sh&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cat $STAGE_TARGET_SERVER_KEY&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh -i  $STAGE_TARGET_SERVER_KEY ${STAGE_NAME}@${STAGE_TARGET_SERVER} chmod 755 ${STAGE_TARGET_PATH}/start.sh&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ssh -i  $STAGE_TARGET_SERVER_KEY ${STAGE_NAME}@${STAGE_TARGET_SERVER} &amp;lt;&amp;lt; EOT&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;cd ${STAGE_TARGET_PATH}&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./start.sh&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;EOT&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo Congratulation. All done!&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;deploy_as_production&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;stage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;deploy&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;needs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;job&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;build&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;artifacts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;when&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;on_success&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;only&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;master&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;echo [INFO] DEPLOY PRODUCTION_MODE $CI_PROJECT_NAME&lt;/span&gt;




&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[aws Series] 01 Model</title>
        <link>/aws/2024/05/22/aws-series-01-Model.html</link>
        <guid isPermaLink="true">/aws/2024/05/22/aws-series-01-Model.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/aws/01.Model.md&quot;&gt;Dictionary - Price Model&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;price-model&quot;&gt;Price Model&lt;/h1&gt;
&lt;p&gt;AWS EC2 인스턴스에 대한 요금을 지불하는 방법에는 온 디맨드 인스턴스, 예약 인스턴스, 스팟 인스턴스 및 전용 호스트의 네 가지 방법이 존재한다.&lt;/p&gt;

&lt;h2 id=&quot;온-디멘드-on-demand-pricing&quot;&gt;온 디멘드 (On-Demand Pricing)&lt;/h2&gt;
&lt;p&gt;온 디맨드 인스턴스를 사용하면 실행하는 인스턴스에 따라 시간당 또는 초당 컴퓨팅 용량을 지불하게 된다.
이를 수요에 반응한다고 말하는데, 그냥 쓴만큼 낸다라고 이해하면 된다.
가장 기본적인 초보용 요금제이며, 장기 약정 없이 시간 단위로 인스턴스를 사용하기 때문에 보편적으로 가장 많이 선택하는 요금제이며, 인스턴스 생성 시에 과금이 시작되고 종료(반납)을 하면 정산되는 방식이다.
애플리케이션 요구 사항을 충족하기 위해 컴퓨팅 용량을 늘리거나 줄일 수 있으며 사용하는 인스턴스에 대해 지정된 시간당 요금 만 지불하면 된다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;레드햇 같은 오픈소스가 아닌 인스턴스 - 시간당 지불&lt;/li&gt;
  &lt;li&gt;아마존 리눅스, 오픈소스 기반 - 초당 지불&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;온-디멘드-이용-고객&quot;&gt;온 디멘드 이용 고객&lt;/h3&gt;
&lt;p&gt;권장되는 소비자층은 다음과 같다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;선불 결제 또는 장기 약정없이 Amazon EC2의 저렴한 비용과 유연성을 선호하는 사용자&lt;/li&gt;
  &lt;li&gt;중단 할 수 없는 단기, 예측할 수 없는 워크로드가 있는 애플리케이션&lt;/li&gt;
  &lt;li&gt;Amazon EC2에서 처음으로 개발 또는 테스트중인 애플리케이션&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;예약-인스턴스-resserved-instance---ri-pricing&quot;&gt;예약 인스턴스 (Resserved Instance - RI Pricing)&lt;/h2&gt;
&lt;p&gt;미리 일정 기간(1년 ~ 3년)을 약정해서 쓰는 방식이다. 즉, 선납금을 납부하는 방식이다.
최대 75% 정도 저렴하다. 당연히 온디멘드의 쓴만큼 내는 유연성을 희생해서 할인을 받는 격으로 생각하면 된다.&lt;/p&gt;

&lt;p&gt;예약 인스턴스를 특정 가용 영역에 지정하면 용량 예약이 제공되므로 필요할 때 예약한 인스턴스를 시작할 수 있다.
예를들어 만일 회사가 수요일날 특히 서버자원을 많이 쓴다면 수요일은 자원을 늘려야 한다. 그러면 예약 인스턴스를 수요일날 늘리게끔 설정을 하면 돈을 아낄 수 있는 원리이다.
즉, 예측 가능한 사용량이 있는 애플리케이션의 경우 예약 인스턴스는 온 디맨드 인스턴스와 비교하여 상당한 비용을 절감 할 수 있는 것이다.&lt;/p&gt;

&lt;p&gt;몇년동안 얼만큼 사용 예정 계획이 확실할때 사용하면 좋은 요금제이다.
일정 규모의 인스턴스를 항상 사용하기 떄문에 주로 큰 기업들이 이용하는 편이다.&lt;/p&gt;

&lt;h3 id=&quot;예약-인스턴스-이용-고객&quot;&gt;예약 인스턴스 이용 고객&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;수요가 꾸준한 애플리케이션&lt;/li&gt;
  &lt;li&gt;예약 용량이 필요할 수 있는 애플리케이션&lt;/li&gt;
  &lt;li&gt;총 컴퓨팅 비용을 절감하기 위해 1년 또는 3년 동안 EC2를 사용하기로 약정할 수 있는 고객&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;스팟-인스턴스-spot-instances-pricing&quot;&gt;스팟 인스턴스 (Spot Instances Pricing)&lt;/h2&gt;
&lt;p&gt;스팟 인스턴스는 경매 형식으로 시장에 남는 인스턴스를 구매해서 쓰는 방식인 요금제이다.&lt;/p&gt;

&lt;p&gt;이게 무슨 소리냐 하면은, aws에서는 항상 인스턴스를 빵빵하게 확보해 놓고 있는데, 사람들이 안쓰면 손해이기 때문에 aws 입장에서는 재고가 남은 인스턴스들을 소비 하기위해서 남은 것들을 저렴하게 내놓아서 소비자들이 그걸 입찰해서 이용하는 방식인 것이다.
온디맨드 요금보다 90% 할인된 가격으로 내놓으니 가장 저렴한 요금 정책이라고 말할 수 있다.&lt;/p&gt;

&lt;p&gt;하지만 문제는 언제 반납해야할지 모른다는 것이다.
남는 인스턴스가 아까워서 싸게 판매하는 취지는, 만일 언제 비싼 요금을 내고 사용하는 고객들의 인스턴스 수요가 많아지면, 이들에게 제공하기 위해 곧바로 다시 회수 해간다는 의미를 내포한다.
정말로 어느순간 AWS가 인스턴스를 가져가버려 정작 내 서비스가 잠시동안 끊겨버리는 순간이 올수 있다는 말이다.
물론 인스턴스 수요가 적어지면 다시 인스턴스를 할당받아 내 애플리케이션을 다시 서비스가 가능하다.&lt;/p&gt;

&lt;p&gt;따라서 반환 시간이 예측이 불가능하기에, 인스턴스가 확보되고 종료되는 것을 반복해도 문제없는 애플리케이션에 적합하며 주로 빅데이터 처리, ML등 많은 인스턴스가 필요한 작업에 사용된다. (최대 90% 저렴하니까)&lt;/p&gt;

&lt;h3 id=&quot;스팟-인스턴스-원리&quot;&gt;스팟 인스턴스 원리&lt;/h3&gt;
&lt;p&gt;아래의 그래프를 보자.
고객들이 인스턴스를 많이 쓰면 스팟 인스턴스 가격(노랑선)이 올라가게 된다.
일단 먼저 내가 원하는 지정 가격(초록선)을 정한다.
이 지정가격 보다 비싸지면 반납해서 인스턴스를 중지시키고, 가격이 싸지면 다시 인스턴스를 사용한다는 원리이다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;수요에 따라 스팟 인스턴스의 가격은 계속 변동한다.&lt;/li&gt;
  &lt;li&gt;내가 지정한 가격보다 현재 가격이 낮다면 인스턴스를 할당받고 사용한다.&lt;/li&gt;
  &lt;li&gt;내가 지정한 가격보다 현재 가격이 높다면 반환된다.&lt;/li&gt;
  &lt;li&gt;다시 가격이 낮아지면 사용한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/spot.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;스팟-인스턴스-이용-고객&quot;&gt;스팟 인스턴스 이용 고객&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;시작 및 종료 시간이 자유로운(유연한, flexible) 응용 애플리케이션
    &lt;ul&gt;
      &lt;li&gt;지금 내가 급하게 사용할 필요없고, 사용할때를 기다리고 내가 원하는 가격에 입찰되어 내가 사용할 수 있을때, 그때 해도 되는 것들에 활용하면 적합&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;컴퓨팅 가격이 매우 저렴해야만 수익이 나는 애플리케이션&lt;/li&gt;
  &lt;li&gt;대량의 서버 용량 추가로 긴급히 컴퓨팅 파워가 필요한 사용자&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;전용-호스트&quot;&gt;전용 호스트&lt;/h2&gt;
&lt;p&gt;실제 물리적인 서버를 임대하는 요금제이다.
aws 인스턴스 자체가 가상환경에서 사용하는 컴퓨터인데, 그 반대라고 보면 된다.
즉, 가상화된 서버에서  EC2를 빌리는 것이 아닌 지정된 물리서버에서 EC2가 대여가 된다
보안적인 이유, 규정(라이센스)에 따른 이유, 퍼포먼스를 위한 이유(CPU Steal 등) 등으로 사용된다.
간단히 말하자면 가상 컴퓨팅은 구조적 한계 때문에 여러사람들이 사용하면 퍼포먼스 하락 요소가 있기 때문이다.&lt;/p&gt;

&lt;h3 id=&quot;전용-호스트-이용-고객&quot;&gt;전용 호스트 이용 고객&lt;/h3&gt;

&lt;p&gt;EC2에서 Microsoft 및 Oracle 같은 공급업체의 적격 소프트웨어 라이선스를 사용할 경우
기존의 물리적 서버에서 EC2를 사용할 경우&lt;/p&gt;

&lt;h3 id=&quot;요금-정책&quot;&gt;요금 정책&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;가격순서
    &lt;blockquote&gt;
      &lt;p&gt;스팟 인스턴스 &amp;lt; 예약 인스턴스 &amp;lt; 온디맨드 &amp;lt; 전용 호스트
2, EC2의 가격모델과 EBS와는 별도로 요금이 청구된다. (EBS는 사용한만큼 지불)&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;기타 데이터 통신 등의 비용은 별도로 청구 (참고로 AWS는 AWS 바깥으로 나가는 트래픽에 대해서만 요금 부과)
    &lt;blockquote&gt;
      &lt;p&gt;예를들어 50테라바이트의 파일을 업로드할때는 무료
단, 그 파일을 다운받을때 요금 청구&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;cite&gt;출처: https://inpa.tistory.com/entry/AWS-📚-EC2-가격-요금-모델-원리-💰-파헤치기 [Inpa Dev 👨‍💻:티스토리]&lt;/cite&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[linux Series] 16 Xargs_vs_pipe</title>
        <link>/linux/2024/05/21/linux-series-16-xargs_vs_pipe.html</link>
        <guid isPermaLink="true">/linux/2024/05/21/linux-series-16-xargs_vs_pipe.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/linux/xargs_vs_pipe.md&quot;&gt;Dictionary - xars vs. pipe&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;xars-vs-pipe&quot;&gt;xars vs. pipe&lt;/h1&gt;

&lt;h2 id=&quot;xars&quot;&gt;xars&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;기본적인 명령어 뒤에 파이프로 추가하여 사용&lt;/li&gt;
  &lt;li&gt;파이프 이전에 명령을 인자로 받아 명령어를 실행하는 구조&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;xargs를 사용하는 가장 기본적인 예는 pipe to xargs를 사용하여 공백으로 구분된 여러 문자열을 전달하고 
해당 문자열을 인수로 사용할 명령을 실행하는 것이다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# file1 file2 file3 이라는 문자열을 touch 의 인수로 넘겨주어,&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# touch file1 file2 file3 명령을 수행한것과 같은 결과를 준다. (빈파일 3개 생성)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;file1 file2 file3&quot;&lt;/span&gt; | xargs &lt;span class=&quot;nb&quot;&gt;touch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;options&quot;&gt;options&lt;/h3&gt;
&lt;p&gt;|    option     |                                         description                                         |
|:————-:|:——————————————————————————————-:|
|      -a       |                                   표준 입력 대신 파일에서 항목을 읽는다.                                    |
|      -O       |                                      공백이나 특수문자 찾을 때 사용                                      |
|    -printO    |                                   파일 사이의 공백을 \O로 분리자로 출력                                    |
|      -d       |                                  입력된 문자를 그대로 사용(따옴표, 백슬래시)                                  |
|      -n       |                                       지정된 숫자만큼 행을 출력                                        |
|      -p       |                         각 명령 행 실행 여부, 터미널에서 행을 읽어들이는 것에 대한 여부를 묻는다.                         |
|      -P       |                                하나의 명령에 프로세스를 지정 (-n과 같이 사용)                                 |
|      -t       |                                xargs를 통해 구성된 명령어를 표준 에러로 출력                                 |
|      -s       | 한 라인에 들어갈 수 있는 문자열 수를 지정(기본적으로 128k 안으로 문자열을 만들어 하나의 명령으로 실행하나 해당 옵션으로 1024k까지 사용 가능하게 한다.) |
|      -x       |                                   -s로 지정한 크기가 초과되면 종료시킨다.                                   |
| –show-limits |                            xargs의 버퍼 크기 선택 및 -s 옵션에 대한 길이 제한 출력                             |
|      -E       |                                     문자열 끝을 eof-str로 설정                                      |
|      -I       |                    xargs에 전달된 라인 전체를 뒤에 나오는 명령어의 인자로 사용 (라인 전체는 {}로 표기)                     |
|      -l       |                         명령어 뒤 공백을 다음 행이 아닌 논리적으로 이어진 명령으로 인식하게 한다.                          |&lt;/p&gt;

&lt;h3 id=&quot;예제&quot;&gt;예제&lt;/h3&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# /tmp 디랙토리 아래 core라는 파일을 찾아 삭제&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;find /tmp &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; core &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-print&lt;/span&gt; | xargs &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# ls를 이용하여 text파일을 모두 읽어와 하나의 파일로 병합&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.txt | xargs &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; abc.txt

&lt;span class=&quot;c&quot;&gt;# 디렉토리에서 txt파일을 우선 찾은 다음 이름에 abcd를 포함하는 파일을 또 찾음&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;find ~/ &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; “&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.txt&lt;span class=&quot;nv&quot;&gt;$”&lt;/span&gt; | xargs &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; “abcd”

&lt;span class=&quot;c&quot;&gt;# 파일안에 url이 있을 경우 해당 인자들을 모두 wget으로 넘겨 다운받는다&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;url-list.txt | xargs wget &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 모든 jpg파일을 찾아 images.tar.gz로 압축&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;find / &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; “&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jpg” &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-print&lt;/span&gt; | xargs &lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-cvzf&lt;/span&gt; images.tar.gz

&lt;span class=&quot;c&quot;&gt;# ls 로 출력된 모든 이미지를 하나씩 인자로 받아 외장하드로 복사&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.jpg | xargs &lt;span class=&quot;nt&quot;&gt;-n1&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; /external-hard-drive/tmp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;xargs-vs-pipe&quot;&gt;xargs vs. pipe&lt;/h2&gt;
&lt;blockquote&gt;
  &lt;p&gt;파이프 ‘|’ 는 앞의 결과를 인자로 받는게 아니다.
파이프 ‘|’ 는 앞의 표준출력을 다음 프로그램의 표준입력으로 연결하는 것이다.
파이프 ‘|’ 와의 조합으로 표준출력을 다음 프로그램의 ‘인자’로 넘길려면 xargs 를 사용한다.
xargs 프로그램은 실행할 대상프로그램을 인자로 받고, xargs 프로그램의 표준입력을 실행 대상프로그램의 인자로 전달하여 실행한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&quot;예시&quot;&gt;예시&lt;/h3&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; 뒤에는 문자열이나 변수가 바로 붙는다
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&lt;/code&gt; 는 표준입력 리다이렉션이다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi err.txt
err
:wq


&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;err.txt | &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;## err.txt&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## 파일명 자체를 &lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;err.txt | xargs &lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;## err&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;## 파일을&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;출처: https://inpa.tistory.com/entry/LINUX-📚-xargs-명령-파이프-와-차이점-완벽-정리-표준입력-인자-차이 [Inpa Dev 👨‍💻:티스토리]&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[linux Series] 15 Volume</title>
        <link>/2024/05/21/linux-series-15-Volume.html</link>
        <guid isPermaLink="true">/2024/05/21/linux-series-15-Volume.html</guid>
        <description>
&lt;hr /&gt;
&lt;p&gt;layout: post
categories: [LINUX]
—
from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/linux/Volume.md&quot;&gt;Dictionary - Volume&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;aws 재시작으로 볼륨 마운트 해제되어서 해결하면서 찾은&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;volume&quot;&gt;Volume&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;lsblk : 블록 장치를 나열하는 유틸리티 추가 정보를 보려면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsblk -f&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;blkid : 블록 디바이스의 uuid를 출력&lt;/li&gt;
  &lt;li&gt;hwinfo: 하드웨어, 특히 스토리지 디스크에 대한 정보를 볼 수 있는 유틸리티이다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hwinfo --disk | --short | --block&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;mount : mount [-o [옵션]] &amp;lt;partition&lt;/td&gt;
          &lt;td&gt;disk&amp;gt; &lt;mountPoint&gt; (* 영구 마운트 : /etc/fstab에 추가)&lt;/mountPoint&gt;&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;unmount: umount [-o [옵션]] &lt;mountPoint&gt;&lt;/mountPoint&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Device의 종류

Block Device : Block 단위로 입출력을 하는 Device, Block은 File System의 섹터를 의미
Character Device : Character 단위, 즉 바이트 단위로 입출력을 하는 Device, 데이터 관리 기능을 가진 응용 프로그램
Network Device : 네트워크 층과 연결되어 있음(루프백 장치, 랜카드와 같은...)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;|           |      blockDevice       |                   characterDevice                    |
|:———:|:———————-:|:—————————————————-:|
| 데이터 전송 단위 | Block(File System의 섹터) |                 Character(문자, Byte)                  |
|       전송 버퍼 처리     |    System Buffer 사용    |                    응용 프로그램 Buffer                    |
|       대표 장치     |        HDD, SSD        |                키보드, 마우스, 모니터, 프린터 등..                 |
|         주요 특징  |      File System       | 자체적으로 데이터를 관리하기 위한 기능을 가진 &lt;br /&gt; 응용 프로그램 사용(DBMS….) |&lt;/p&gt;

&lt;h2 id=&quot;블록-디바이스block-device-요청-처리-방식&quot;&gt;블록 디바이스(Block Device) 요청 처리 방식&lt;/h2&gt;
&lt;p&gt;리눅스 커널은 블록 디바이스를 효율적으로 처리하기 위해 처리할 내용을 큐에 모아두었다가 일정 시간이 지나거나 임계치에 도달하면 블록 디바이스 드라이버에 처리를 요구, 블록 디바이스 드라이버에 요구하는 처리 함수는 두 가지 형식으로 존재(커널 처리에 있어서 두 가지가 동시에 일어나는 경우는 없음)&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[linux Series] 14 Vieditor</title>
        <link>/linux/2024/05/21/linux-series-14-ViEditor.html</link>
        <guid isPermaLink="true">/linux/2024/05/21/linux-series-14-ViEditor.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/linux/ViEditor.md&quot;&gt;Dictionary - VI&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;vi-vim&quot;&gt;VI/ VIM&lt;/h2&gt;
&lt;h2 id=&quot;vi-version&quot;&gt;vi –version&lt;/h2&gt;
&lt;p&gt;어떤 vi가 설치됐는지 확인할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;VIM - Vi IMproved 9.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2022 Jun 28, compiled Dec 20 2023 18:58:31&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
macOS version - arm64
Included patches: 1-2136
Compiled by root@apple.com
Normal version without GUI.  Features included &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;+&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; or not &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;-&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;:
+acl               +file_in_path      +mouse_urxvt       &lt;span class=&quot;nt&quot;&gt;-tag_any_white&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-arabic&lt;/span&gt;            +find_in_path      +mouse_xterm       &lt;span class=&quot;nt&quot;&gt;-tcl&lt;/span&gt;
+autocmd           +float             +multi_byte        +termguicolors
+autochdir         +folding           +multi_lang        +terminal
&lt;span class=&quot;nt&quot;&gt;-autoservername&lt;/span&gt;    &lt;span class=&quot;nt&quot;&gt;-footer&lt;/span&gt;            &lt;span class=&quot;nt&quot;&gt;-mzscheme&lt;/span&gt;          +terminfo
&lt;span class=&quot;nt&quot;&gt;-balloon_eval&lt;/span&gt;      +fork&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;            +netbeans_intg     +termresponse
&lt;span class=&quot;nt&quot;&gt;-balloon_eval_term&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-gettext&lt;/span&gt;           +num64             +textobjects
&lt;span class=&quot;nt&quot;&gt;-browse&lt;/span&gt;            &lt;span class=&quot;nt&quot;&gt;-hangul_input&lt;/span&gt;      +packages          +textprop
++builtin_terms    +iconv             +path_extra        +timers
+byte_offset       +insert_expand     &lt;span class=&quot;nt&quot;&gt;-perl&lt;/span&gt;              +title
+channel           +ipv6              +persistent_undo   &lt;span class=&quot;nt&quot;&gt;-toolbar&lt;/span&gt;
+cindent           +job               +popupwin          +user_commands
&lt;span class=&quot;nt&quot;&gt;-clientserver&lt;/span&gt;      +jumplist          +postscript        &lt;span class=&quot;nt&quot;&gt;-vartabs&lt;/span&gt;
+clipboard         &lt;span class=&quot;nt&quot;&gt;-keymap&lt;/span&gt;            +printer           +vertsplit
+cmdline_compl     +lambda            &lt;span class=&quot;nt&quot;&gt;-profile&lt;/span&gt;           +vim9script
+cmdline_hist      &lt;span class=&quot;nt&quot;&gt;-langmap&lt;/span&gt;           &lt;span class=&quot;nt&quot;&gt;-python&lt;/span&gt;            +viminfo
+cmdline_info      +libcall           &lt;span class=&quot;nt&quot;&gt;-python3&lt;/span&gt;           +virtualedit
+comments          +linebreak         +quickfix          +visual
+conceal           +lispindent        +reltime           +visualextra
+cryptv            +listcmds          &lt;span class=&quot;nt&quot;&gt;-rightleft&lt;/span&gt;         +vreplace
+cscope            +localmap          &lt;span class=&quot;nt&quot;&gt;-ruby&lt;/span&gt;              +wildignore
+cursorbind        &lt;span class=&quot;nt&quot;&gt;-lua&lt;/span&gt;               +scrollbind        +wildmenu
+cursorshape       +menu              +signs             +windows
+dialog_con        +mksession         +smartindent       +writebackup
+diff              +modify_fname      &lt;span class=&quot;nt&quot;&gt;-sodium&lt;/span&gt;            &lt;span class=&quot;nt&quot;&gt;-X11&lt;/span&gt;
+digraphs          +mouse             &lt;span class=&quot;nt&quot;&gt;-sound&lt;/span&gt;             &lt;span class=&quot;nt&quot;&gt;-xattr&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-dnd&lt;/span&gt;               &lt;span class=&quot;nt&quot;&gt;-mouseshape&lt;/span&gt;        +spell             &lt;span class=&quot;nt&quot;&gt;-xfontset&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-ebcdic&lt;/span&gt;            +mouse_dec         +startuptime       &lt;span class=&quot;nt&quot;&gt;-xim&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-emacs_tags&lt;/span&gt;        &lt;span class=&quot;nt&quot;&gt;-mouse_gpm&lt;/span&gt;         +statusline        &lt;span class=&quot;nt&quot;&gt;-xpm&lt;/span&gt;
+eval              &lt;span class=&quot;nt&quot;&gt;-mouse_jsbterm&lt;/span&gt;     &lt;span class=&quot;nt&quot;&gt;-sun_workshop&lt;/span&gt;      &lt;span class=&quot;nt&quot;&gt;-xsmp&lt;/span&gt;
+ex_extra          +mouse_netterm     +syntax            &lt;span class=&quot;nt&quot;&gt;-xterm_clipboard&lt;/span&gt;
+extra_search      +mouse_sgr         +tag_binary        &lt;span class=&quot;nt&quot;&gt;-xterm_save&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-farsi&lt;/span&gt;             &lt;span class=&quot;nt&quot;&gt;-mouse_sysmouse&lt;/span&gt;    &lt;span class=&quot;nt&quot;&gt;-tag_old_static&lt;/span&gt;    
   system vimrc file: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VIM&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/vimrc&quot;&lt;/span&gt;
     user vimrc file: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.vimrc&quot;&lt;/span&gt;
 2nd user vimrc file: &lt;span class=&quot;s2&quot;&gt;&quot;~/.vim/vimrc&quot;&lt;/span&gt;
      user exrc file: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HOME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/.exrc&quot;&lt;/span&gt;
       defaults file: &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$VIMRUNTIME&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/defaults.vim&quot;&lt;/span&gt;
  fall-back &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$VIM&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/usr/share/vim&quot;&lt;/span&gt;
Compilation: gcc &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Iproto&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-DHAVE_CONFIG_H&lt;/span&gt;   &lt;span class=&quot;nt&quot;&gt;-DMACOS_X_UNIX&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;-g&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-O2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-U_FORTIFY_SOURCE&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D_FORTIFY_SOURCE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1      
Linking: gcc   &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt;/usr/local/lib &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; vim        &lt;span class=&quot;nt&quot;&gt;-lm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-lncurses&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;-liconv&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-framework&lt;/span&gt; Cocoa           
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;예시로 +clipboard 여부에 따라 vi에서 클립보드 사용이 불가할 수도 있다.
이래서 그냥 대고 복사가 안됐던 것이기도 하다.&lt;/p&gt;

&lt;h2 id=&quot;vi-내용-삭제-명령어&quot;&gt;vi 내용 삭제 명령어&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;x&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 있는 문자 한글자 삭제 (반대인 del은 윈도우와 똑같다)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;nx&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 있는 위치부터 n개의 문자를 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;dw&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;현재 커서에 있는 한 단어 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;dd&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 있는 라인(행) 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ndd&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 있는 라인부터 n개의 라인 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;db&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서의 위치에서 거꾸로 한 단어 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;D&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서 오른쪽 행 삭제&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:5,10d&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;5~10번째 행 삭제&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi-되돌리기-명령어&quot;&gt;vi 되돌리기 명령어&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;u&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이전 명령 취소 (되돌리기)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;U&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;행 변경 사항 취소, 이전의 최종 행 취소&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;이전 최종 명령 반복&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi-복붙-및-이동-명령어&quot;&gt;vi 복붙 및 이동 명령어&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yy&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 위치한 줄 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Y&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;행 yank 또는 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yh&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서의 왼쪽 문자 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yl&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서에 위치한 문자 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yi&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 위치한 줄과 그 아랫줄 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;yk&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 위치한 줄과 그 윗줄 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;p&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;붙여넣기 (행 위로 삽입)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;P&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;붙여넣기 (행 아래에 삽입)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:1,2 co 3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1~2행을 3행 다음으로 복사&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:4,5 m 6&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4~5행을 6행 위로 이동&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 한줄 복사
해당 라인에서 'yy' 누르면 캐시에 저장이 된다.
붙여넣기를 원하는 곳으로 이동하여 'p'를 누르면 커서 다음 라인에 붙여넣기가 된다.

# 블럭 복사
'v'키를 누른 후 커서를 이동하여 블력을 설정한다.
(putty의 경우 블럭이 설정되는 모습이 보이나, ssh의 경우 블럭 모습이 나타나지 않으나 실제로는 설정되고 있다.)
원하는 부분을 블럭으로 설정한 뒤(설정 완료키는 없다) 'y'키를 누르면 캐시에 복사가 된다.
같은 방법으로 원하는 곳으로 이동하여 'p'를 누르면 커서 다음 라인에 붙여넣기가 된다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;vi-행-번호-표시&quot;&gt;vi 행 번호 표시&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:set nu 또는 :set number&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;에디터의 각 행의 좌측에 행 번호 표시.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:set nonu&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;에디터의 각 행의 좌측 행 번호 숨기기&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi-검색-명령어&quot;&gt;vi 검색 명령어&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/{검색할 문자열}&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;오른쪽 아래 방향으로 문자열 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;?{검색할 문자열}&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;왼쪽 위 방향으로 문자열 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;n&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열의 다음으로 계속 검색&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;N&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;문자열의 이전으로 계속 검색&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi-저장-및-종료&quot;&gt;vi 저장 및 종료&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:w&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;변경사항 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:w&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;{파일명}	변경사항 입력한 파일명으로 저장&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:wq&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;변경사항 보관 후 vi 종료.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ZZ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;명령과 같음. :w(기록)과 :q(종료) 를 연속적으로 수행.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;ZZ&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;변경사항 보관 후 vi 종료.임시 버퍼의 내용을 vi로 호출할때 사용되었던 파일에 기록한 후 vi를 빠져나옴.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:q!&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;변경 내용을 저장하지 않고 종료&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:q&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;작업한게 없으면 그대로 종료&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:e!&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;마지막으로 저장했던 내용 이후의 수정한 것들을 취소하고 다시 편집상태로&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi-내용-바꾸기-명령어&quot;&gt;vi 내용 바꾸기 명령어&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:s/[대상문자열]/[바꿀문자열]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서가 위치한 행에서 첫번째로 나오는 대상문자열을 바꿀문자열로 치환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:%s[대상문자열]/[바꿀문자열]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;파일 전체에서 모든 대상문자열을 바꿀문자열로 치환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:[범위]s[대상문자열]/[바꿀문자열]&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;범위 내 모든 각 행에서 첫번쨰로 나오는 대상문자열을 바꿀문자열로 치환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:[범위]s[대상문자열]/[바꿀문자열]g&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;범위 내 모든 행에서 대상문자열을 바꿀문자열로 치환&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:[범위]s[대상문자열]/[바꿀문자열]gc&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;범위 내 모든 행에서 대상문자열을 바꿀문자열로 바꾸되 수정할 지 여부를 묻는다&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi-화면-정리&quot;&gt;vi 화면 정리&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;Ctrl + l&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;불필요한 화면정리 후 다시 표시&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi-파일-명령어&quot;&gt;vi 파일 명령어&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;명령어&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;ex&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:r {파일명}&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;커서 다음에 파일 삽입&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:r test.txt&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:{행번호} r {파일명}&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;입력한 파일을 입력한 행번호 다음에 삽입&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;:10 r test.txt&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;vi--기타-명령어&quot;&gt;vi  기타 명령어&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;문자&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;.&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;현재 line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;전체 line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;파일 맨끝 line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1,$&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;%&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2,3&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2 ~ 3 line&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;https://inpa.tistory.com/entry/LINUX-📚-Vi-Vim-에디터-다루기-명령어-💯-정리#vi_내용_삭제_명령어&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[linux Series] 13 Tree</title>
        <link>/linux/2024/05/21/linux-series-13-Tree.html</link>
        <guid isPermaLink="true">/linux/2024/05/21/linux-series-13-Tree.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/linux/Tree.md&quot;&gt;Dictionary - Linux fileTree&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;linux&quot;&gt;Linux&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;/assets/img/fileTree.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;bin-sbin&quot;&gt;bin, sbin&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;bin : user command binaries -&amp;gt; 커맨드 라인 인터페이스 관련된 명령어 실행 파일을 포함 ( ex. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cat&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cd&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; … )&lt;/li&gt;
  &lt;li&gt;sbin : system command binaries -&amp;gt; 시스템을 컨트롤하기 위한 파일들 ( ex. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systemctl&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reboot&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;연관된 디렉토리 종류는 usr/bin, usr/sbin, usr/local/bin, usr/local/sbin&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;bin: cd, ls 등의 사용자 커맨드 파일이 위치한 디렉토리 (필수적인 파일만 관리)&lt;/li&gt;
  &lt;li&gt;sbin: systemctl 등의 시스템 커맨드 파일이 위치한 디렉토리 (필수적인 파일만 관리)&lt;/li&gt;
  &lt;li&gt;usr/bin: 필요에 의해 설치된 사용자 커맨드 파일이 위치한 디렉토리 (yum 등 패키지 관리자가 관리)&lt;/li&gt;
  &lt;li&gt;usr/sbin: 필요에 의해 설치된 시스템 커맨드 파일이 위치한 디렉토리 (yum 등 패키지 관리자가 관리)&lt;/li&gt;
  &lt;li&gt;usr/local/bin: 기타 사용자 커맨드 파일이 위치한 디렉토리 (사용자 또는 설치 파일이 해당 디렉토리에 파일 설치)&lt;/li&gt;
  &lt;li&gt;usr/local/sbin: 기타 시스템 커맨드 파일이 위치한 디렉토리 (사용자 또는 설치 파일이 해당 디렉토리에 파일 설치)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;path&quot;&gt;PATH&lt;/h2&gt;
&lt;p&gt;OS 어디서든 해당 위치에 접근할 수 있게 만드는 환경변수이다. 위의 6개 디렉토리는 모두 환경 변수에 등록되어 있어서 해당 폴더들 내부에 있다면
바로 명령어로 실행할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;lib-lib64&quot;&gt;lib, lib64&lt;/h2&gt;
&lt;p&gt;lib, lib64는 시스템 부팅이나 bin, sbin 디렉토리에 있는 바이너리 파일들 실행에 필요한 공유 라이브러리 디렉토리다.&lt;/p&gt;

&lt;h2 id=&quot;etc&quot;&gt;etc&lt;/h2&gt;
&lt;p&gt;etc는 설정 파일을 관리한다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.d&lt;/code&gt;를 붙여서 디렉토리인 것을 구별하기도 하는 경우가 있다. 설정 파일은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.conf&lt;/code&gt;라는 이름의 형식으로 많이 관리 되어 있다.&lt;/p&gt;

&lt;h2 id=&quot;var&quot;&gt;var&lt;/h2&gt;
&lt;p&gt;variable data를 뜻한다. 시스템 로그나 웹 로그 파일들을 포함한다.&lt;/p&gt;

&lt;h2 id=&quot;usr&quot;&gt;usr&lt;/h2&gt;
&lt;p&gt;universal system resource 혹은 user의 약자라고 하기도 한다. 리눅스의 여러 사용자들이 공유하는 파일들을 관리한다.&lt;/p&gt;

&lt;h2 id=&quot;opt&quot;&gt;opt&lt;/h2&gt;
&lt;p&gt;optional을 의미한다.&lt;/p&gt;

&lt;h2 id=&quot;home-root&quot;&gt;home, root&lt;/h2&gt;
&lt;p&gt;home은 개별 사용자의 디렉토리를 관리하는 디렉토리다. 만약 ec2-user라는 이름의 사용자를 만들면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/ec2-user&lt;/code&gt;라는 디렉토리가 생성된다.&lt;/p&gt;

&lt;h2 id=&quot;fhs-filesystem-hierarchy-standard----기타-디렉토리&quot;&gt;FHS( Filesystem Hierarchy Standard ) - 기타 디렉토리&lt;/h2&gt;

&lt;h3 id=&quot;media-mnt&quot;&gt;media, mnt&lt;/h3&gt;
&lt;p&gt;시스템이 마운팅되는 디렉토리 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;media&lt;/code&gt;는 os가 관리하는 디렉토리 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mnt&lt;/code&gt;는 커맨드라인으로 마운트하는 디렉토리&lt;/p&gt;

&lt;h3 id=&quot;boot&quot;&gt;boot&lt;/h3&gt;
&lt;p&gt;부팅에 필요한 파일들을 포함하는 디렉토리&lt;/p&gt;

&lt;h3 id=&quot;dev&quot;&gt;dev&lt;/h3&gt;
&lt;p&gt;마우스 등 디바이스 관련 파일이 존재하는 디렉토리&lt;/p&gt;

&lt;h3 id=&quot;sys&quot;&gt;sys&lt;/h3&gt;
&lt;p&gt;디바이스를 관리하기 위한 가상 파일 시스템 디렉토리&lt;/p&gt;

&lt;h3 id=&quot;proc&quot;&gt;proc&lt;/h3&gt;
&lt;p&gt;현재 실행 중인 프로세스에 대한 정보를 관리하는 디렉토리&lt;/p&gt;

&lt;h3 id=&quot;run&quot;&gt;run&lt;/h3&gt;
&lt;p&gt;Run-time variable data를 관리한다. 부팅 후 시스템 정보를 관리하는 디렉토리&lt;/p&gt;

&lt;h3 id=&quot;srv&quot;&gt;srv&lt;/h3&gt;
&lt;p&gt;FTP, WWW 또는 CVS(???) 같은 특정 서비스의 데이터 파일 위치를 포함한 디렉토리&lt;/p&gt;

&lt;h3 id=&quot;tmp&quot;&gt;tmp&lt;/h3&gt;
&lt;p&gt;임시 파일을 저장하기 위한 디렉토리 재부팅 시 삭제, 정기적으로 10일 정도 간격으로 삭제된다.&lt;/p&gt;

&lt;h3 id=&quot;lostfound&quot;&gt;lost+found&lt;/h3&gt;
&lt;p&gt;파일 시스템의 복구에 사용되는 데이터 조각들을 포함하고 있다. 재부팅이나 파일 시스템 체크 커맨드 등을 이용할 때 참조&lt;/p&gt;

&lt;hr /&gt;
&lt;p&gt;https://inpa.tistory.com/entry/LINUX-📚-리눅스-디렉토리-구조#&lt;/p&gt;
</description>
        <pubDate>Tue, 21 May 2024 00:00:00 +0900</pubDate>
      </item>
    
  </channel>
</rss>
