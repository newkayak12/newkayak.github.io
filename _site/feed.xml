<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>newkayak12.github.io</title>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <link>http://localhost:4000/</link>
    <description>A website with blog posts and pages</description>
    <pubDate>Wed, 22 May 2024 21:58:50 +0900</pubDate>
    
      <item>
        <title>[test Series] 02 Mockito</title>
        <link>/test/2024/05/22/test-series-02-Mockito.html</link>
        <guid isPermaLink="true">/test/2024/05/22/test-series-02-Mockito.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/test/02.Mockito.md&quot;&gt;Dictionary - Mockito&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;mockito&quot;&gt;Mockito&lt;/h1&gt;

&lt;p&gt;직접 제어할 수 있는 가짜 객체를 지원하는 테스트 프레임워크다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;mocking
    &lt;ul&gt;
      &lt;li&gt;@Mock : 가짜 객체를 반환해주는 어노테이션&lt;/li&gt;
      &lt;li&gt;@Spy : Stub하지 @Mock과 비슷하지만 실제 객체를 할당하는 어노테이션&lt;/li&gt;
      &lt;li&gt;@InjectMocks: @Mock, @Spy를 자동으로 주입시키는 어노테이션&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Stub
가짜 객체를 주입했을 때 원하는 동작을 오버라이딩하기 위해서
    &lt;ul&gt;
      &lt;li&gt;doReturn()&lt;/li&gt;
      &lt;li&gt;doNothing()&lt;/li&gt;
      &lt;li&gt;doThrow()
를 사용할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[test Series] 01 Bdd</title>
        <link>/test/2024/05/22/test-series-01-BDD.html</link>
        <guid isPermaLink="true">/test/2024/05/22/test-series-01-BDD.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/test/01.BDD.md&quot;&gt;Dictionary - BDD&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;bddbehavior-driven-development&quot;&gt;BDD(Behavior-Driven Development)&lt;/h1&gt;

&lt;p&gt;시나리오를 기반으로 테스트하는 패턴을 의마한다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;given : 시나리오 진행에 필요한 조건을 미리 설정해두는 단계&lt;/li&gt;
  &lt;li&gt;when : 시나리오를 진행 시 필요한 변화를 명시(mocking/ stubbing)&lt;/li&gt;
  &lt;li&gt;Then : 예상되는 결과&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;bddmockito&quot;&gt;BDDMockito&lt;/h2&gt;
&lt;h3 id=&quot;whenthenreturn&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;when().thenReturn();&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;메소드를 실제 호출하지만 리턴 값을 정의할 수 있다.&lt;/li&gt;
  &lt;li&gt;메소드 작업이 오래 걸린다면 끝까지 기다려야 한다.&lt;/li&gt;
  &lt;li&gt;실제 메소드를 호출하기에 호출 대상이 문제가 있으면 안된다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;doreturnwhen&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;doReturn().when();&lt;/code&gt;&lt;/h3&gt;
&lt;ul&gt;
  &lt;li&gt;실제 메소드 호출하지 않으면서 리턴 값을 정의할 수 있다.&lt;/li&gt;
  &lt;li&gt;실제 메소드 호출하지 않기 때문에 호출 대상의 문제 여부는 확인할 수 없다.&lt;/li&gt;
  &lt;li&gt;void 리턴 메소드 stubbing 가능&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[nginx Series] 01 Reverseproxy</title>
        <link>/network/2024/05/22/nginx-series-01-ReverseProxy.html</link>
        <guid isPermaLink="true">/network/2024/05/22/nginx-series-01-ReverseProxy.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/Nginx/01.ReverseProxy.md&quot;&gt;Dictionary - Nginx&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;nginx-기본--reverseproxy&quot;&gt;Nginx 기본 + ReverseProxy&lt;/h1&gt;

&lt;h2 id=&quot;reverseproxy에-대한-기본-내용-참조-&quot;&gt;&lt;a href=&quot;../apache/01.ReverseProxy.md&quot;&gt;ReverseProxy에 대한 기본 내용 참조 &lt;/a&gt;&lt;/h2&gt;

&lt;h2 id=&quot;config&quot;&gt;Config&lt;/h2&gt;

&lt;div class=&quot;language-nginx highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;www.example.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;## 띄어쓰기 민감한 편&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$http_x_forwarded_proto&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http')&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;kn&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;301&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$host$request_uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;www.example.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;rootPath&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;index&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;index.html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
    &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;/api&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://localhost:8080&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;syntax&quot;&gt;Syntax&lt;/h2&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nginx -t&lt;/code&gt; 로 syntax 점검을 받을 수도 있다.&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[network Series] 02 Tls</title>
        <link>/network/2024/05/22/network-series-02-TLS.html</link>
        <guid isPermaLink="true">/network/2024/05/22/network-series-02-TLS.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/network/TLS.md&quot;&gt;Dictionary - TLS&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;tlstransport-layer-security&quot;&gt;TLS(Transport Layer Security)&lt;/h1&gt;
&lt;h2 id=&quot;tls-란&quot;&gt;TLS 란&lt;/h2&gt;
&lt;p&gt;전송 계층 보안(TLS)은 인터넷 상의 커뮤니케이션을 위한 개인 정보와 데이터 보안을 용이하게 하기 위해 설계되어 널리 채택된 보안 프로토콜입니다.
TLS의 주요 사용 사례는 웹 사이트를 로드하는 웹 브라우저와 같이 웹 응용 프로그램과 서버 간의 커뮤니케이션을 암호화하는 것입니다.&lt;/p&gt;

&lt;h2 id=&quot;어떤-일을-하는가&quot;&gt;어떤 일을 하는가?&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;암호화 : 제3자로부터 전송되는 데이터를 숨깁니다.&lt;/li&gt;
  &lt;li&gt;인증 : 정보를 교환하는 당사자가 요청된 당사자임을 보장합니다.&lt;/li&gt;
  &lt;li&gt;무결성 : 데이터가 위조되거나 변조되지 않았는지 확인합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;tls-vs-ssl&quot;&gt;TLS vs. SSL&lt;/h2&gt;
&lt;p&gt;TLS는 Netscape가 개발한 SSL(Secure Sockets Layer)이라고 불리는 이전의 암호화 프로토콜에서 발전한 것입니다. 
TLS 버전 1.0은 SSL 버전 3.1로서 개발을 시작했지만 Netscape와 더 이상 연관이 없음을 명시하기 위해서 발표 전에 프로토콜의 이름이 변경되었습니다.
이러한 역사 때문에 용어 TLS와 SSL은 가끔 서로 바꿔서 사용됩니다.&lt;/p&gt;

&lt;h2 id=&quot;tls-vs-https&quot;&gt;TLS vs. HTTPS&lt;/h2&gt;
&lt;p&gt;HTTPS는 HTTP 프로토콜 상위에서 TLS 암호화를 구현한 것으로 모든 웹 사이트와 다른 웹 서비스에서 사용됩니다. 
따라서 HTTPS를 사용하는 웹 사이트는 TLS 암호화를 이용합니다.&lt;/p&gt;

&lt;h2 id=&quot;tls-인증서란&quot;&gt;TLS 인증서란&lt;/h2&gt;
&lt;p&gt;웹 사이트나 응용 프로그램이 TLS를 사용하기 위해서는 원본 서버에 TLS 인증서가 설치되어 있어야 합니다(위에서 설명한 이름 혼동 때문에 이 인증서는 “SSL 인증서”라고도 알려져 있습니다).
인증 기관이 도메인을 소유한 사람 혹은 비즈니스에게 TLS 인증서를 발행합니다.
인증서는 서버의 공개 키와 더불어 누가 도메인 소유자인지에 대한 중요한 정보를 포함하며, 이 두 가지는 모두 서버의 신원을 확인하는 데 중요합니다.&lt;/p&gt;

&lt;h2 id=&quot;어떤-과정으로-작동하는가&quot;&gt;어떤 과정으로 작동하는가?&lt;/h2&gt;
&lt;p&gt;TLS 연결은 TLS Handshake로 알려진 일련의 순서를 사용하여 초기화됩니다.
사용자가 TLS를 사용하는 웹 사이트를 돌아다니면 사용자 장치(클라이언트 장치로도 알려짐)와 웹 서버 간에 TLS Handshake가 시작됩니다.&lt;/p&gt;

&lt;p&gt;TLS Handshake 동안 사용자 장치와 웹 서버는 다음과 같은 일을 수행합니다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;사용할 TLS 버전(TLS 1.0, 1.2, 1.3 등)을 지정합니다&lt;/li&gt;
  &lt;li&gt;사용할 암호 제품군(아래 참고)을 결정합니다&lt;/li&gt;
  &lt;li&gt;서버의 TLS 인증서를 사용하여 서버의 신원을 인증합니다.&lt;/li&gt;
  &lt;li&gt;Handshake가 완료된 후 키 간의 메시지를 암호화하기 위한 세션 키를 생성합니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;TLS Handshake는 각 커뮤니케이션 세션을 위한 암호 제품군을 구축합니다.
암호 제품군은 공유된 암호화 키 또는 세션 키와 같은 세부 정보를 명시하는 알고리즘 집합으로 해당 특정 세션에 사용됩니다. 
공개 키 암호화로 알려진 기술 덕분에 TLS는 암호화되지 않은 채널을 통해 일치하는 세션 키를 설정할 수 있습니다.&lt;/p&gt;

&lt;p&gt;Handshake는 또한 인증을 처리하며, 이는 대개 클라이언트에게 신원을 증명하는 서버로 구성됩니다.
이는 공개 키를 사용하여 수행됩니다. 공개 키는 단방향 암호화를 사용하는 암호화 키로,
공개 키를 가진 누구나 신뢰성을 보장하기 위해 서버의 개인 키로 암호화된 데이터를 해독할 수 있음을 의미하지만 원래 발신자만 개인 키를 사용해 데이터를 암호화할 수 있습니다.
서버의 공개 키는 TLS 인증서의 일부입니다.&lt;/p&gt;

&lt;p&gt;데이터카 암호화되고 인증되고 나면, 메시지 인증 코드(MAC)와 함께 서명됩니다. 수신자는 데이터의 무결성을 보장하기 위해 MAC를 확인할 수 있습니다. 
이는 아스피린 병에서 발견할 수 있는 일종의 부정 조작 방지 포장과 같은 것입니다. 
소비자는 구매할 때 포장이 손상되지 않았으면 아무도 약에 손대지 않았다는 것을 알 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/tls-ssl-handshake.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;tls가-미치는-영향&quot;&gt;TLS가 미치는 영향&lt;/h2&gt;
&lt;p&gt;TLS의 최신 버전은 웹 응용 프로그램 성능에 거의 영향을 미치지 않습니다.&lt;/p&gt;

&lt;p&gt;TLS 연결을 설정하는 데 수반되는 복잡한 프로세스 때문에 로드 시간과 계산 능력이 소모되어야 합니다. 
데이터가 전송되기 전에 클라이언트와 서버는 왔다 갔다 몇 번 커뮤니케이션해야 하며, 
이는 클라이언트와 서버 모두를 위한 메모리뿐만 아니라 웹 응용 프로그램을 위한 귀중한 밀리세컨드의 로딩 시간을 소모합니다.&lt;/p&gt;

&lt;p&gt;그러나 대신에 TLS Handshake가 생성한 잠재적인 지연을 완화하는 것을 돕는 기술이 있습니다. 
하나는 TLS Handshake가 완료되기 전에 서버와 클라이언트가 데이터 전송을 시작하도록 하는 TLS False Start입니다.
TLS를 빠르게 하기 위한 또 다른 기술은 이전에 커뮤니케이션한 적이 있는 서버와 클라이언트가 간략화된 Handshake를 사용하도록 허용하는 TLS Session Resumption입니다.&lt;/p&gt;

&lt;p&gt;이러한 개선 사항은 TLS를 로딩 시간에 현저하게 영향을 미쳐서는 안 되는 매우 빠른 프로토콜로 만드는 데 도움을 주었습니다. TLS와 연관된 계산 비용은 오늘날 표준에 따르면 거의 무시해도 좋은 정도입니다.&lt;/p&gt;

&lt;p&gt;2018년에 발표된 TLS 1.3은 TLS를 더 빠르게 만들었습니다. TLS 1.3의 TLS Handshake는 몇 밀리세컨드로 프로세스를 단축하며 2회 왕복 대신 1회 왕복(또는 왔다 갔다하는 커뮤니케이션)만을 요구합니다.
사용자가 전에 웹 사이트에 연결한 적이 있으면, TLS Handshake는 0회 왕복을 할 수 있으며, 이는 속도를 더 빠르게 할 수 있습니다.&lt;/p&gt;

&lt;p&gt;&lt;cite&gt;https://www.cloudflare.com/ko-kr/learning/ssl/transport-layer-security-tls/&lt;/cite&gt;
&lt;cite&gt;https://en.wikipedia.org/wiki/Transport_Layer_Security&lt;/cite&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[network Series] 01 Subnet</title>
        <link>/network/2024/05/22/network-series-01-Subnet.html</link>
        <guid isPermaLink="true">/network/2024/05/22/network-series-01-Subnet.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/network/Subnet.md&quot;&gt;Dictionary - IP&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;ipv4-ipv6&quot;&gt;IPv4, IPv6&lt;/h1&gt;

&lt;h2 id=&quot;ipv4&quot;&gt;IPv4&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;####.####.####.###
0 ~ 255 (2^8)으로 구성되며
4옥텟으로 구분되는 형식을 `IPv4`라고 한다.
총 32비트의 주소 공간을 제공한다.

    192   .    168   .     0    .    1
 11000000 . 10101000 . 00000000 . 00000001
|--------|                       |--------|
8비트(=1바이트)                     옥텟(Octet)
|-----------------------------------------|
      IPv4 주소 : 8비트 * 4 = 32비트(4바이트)
      
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ipv6&quot;&gt;IPv6&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;IPv6의 128비트 주소공간은 다음과 같이 16비트(2옥텟)를 16진수로 표현하여
8자리로 나타낸다.(8옥텟)
2001:0db8:85a3:08d3:1319:8a2e:0370:7334

러나 대부분의 자리가 0의 숫자를 갖게 되므로, 0000을 하나의 0으로 축약하거나,
혹은 아예 연속되는 0의 그룹을 없애고 ':' 만을 남길 수 있다.
따라서 아래의 IPv6 주소들은 모두 같은 주소를 나타낸다.

2001:0DB8:0000:0000:0000:0000:1428:57ab
2001:0DB8:0000:0000:0000::1428:57ab
2001:0DB8:0:0:0:0:1428:57ab
2001:0DB8:0::0:1428:57ab
2001:0DB8::1428:57ab

특수 주소 공간
::/128 - 이 주소는 모든 값을 0으로 설정한 특수한 주소이다. 가상적으로만 사용된다. IP 미설정 상태의 발신 주소이다..
::1/128 - 자기 자신의 주소를 가리키는 루프백 주소이다. 프로그램에서 이 주소로 패킷을 전송하면 네트워크는 전송자에게로 패킷을 반송한다. IPv4의 127.0.0.1 주소와 동일하다.
::/96 - IPv4 호환 주소를 위해 사용되는 주소공간이다.
::ffff:0:0/96 - IPv4 매핑 주소를 위해 사용되는 주소공간이다.
fc00::/7 - IPv6 유니캐스트를 위한 주소공간이다.
fe80::/10 - link-local address를 위한 주소공간이다. IPv4의 자동 설정 IP 주소인 169.254.x.x 에 해당한다.
fec0::/10 - site-local address를 위한 주소공간이다. 네트워크 내부에서만 유효한 주소이며, 2004년 10월 RFC3879에서 폐기되어 더 이상 사용되지 않는다.
ff00::/8 - IPv6 멀티캐스트를 위한 주소공간이다. IPv4의 브로드캐스트는 더 이상 지원되지 않으며, IPv6에서는 대신 멀티캐스트를 사용해야 한다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;네트워크주소와-호스트주소&quot;&gt;네트워크주소와 호스트주소&lt;/h2&gt;
&lt;pre&gt;
IP 주소는 네트워크 주소와 호스트 주소 두 부분으로 나뉘게 됩니다.
네트워크 주소는 호스트(단말)들을 모은 네트워크를 지칭하는 주소를 뜻합니다.
네트워크 주소가 동일한 네트워크를 로컬 네트워크라고 합니다.

호스트 주소는 하나의 네트워크 내에 존재하는 호스트(단말)를 구분하기 위한 주소를 뜻합니다.
그런데 IP 주소에서 네트워크 주소와 호스트 주소를 구분하는 경계점이 고정되어있지 않습니다.
그렇다보니 필요한 호스트 IP 개수에 따라 네트워크의 크기를 다르게 할당할 수 있도록 클래스 라는 개념을 도입했는데요.
클래스는 A, B, C, D, E 클래스가 존재하며 각각의 클래스에 할당되는 IP 주소 갯수와 역할이 다릅니다.

A 클래스 -&amp;gt; 네트워크.호스트.호스트.호스트
B 클래스 -&amp;gt; 네트워크.네트워크.호스트.호스트
C 클래스 -&amp;gt; 네트워크.네트워크.네트워크.호스트

A 클래스 -&amp;gt; 1~127.0.0.0 (로컬호스트)
B 클래스 -&amp;gt; 128~191.0.0.0
C 클래스 -&amp;gt; 192~223.0.0.0
D 클래스 -&amp;gt; 224~239.0.0.0

&lt;strong&gt;중요한 점은 클래스 기반으로는 사용하지 않는다는 점이다.&lt;/strong&gt;


클래스 기반보다 네트워크 주소를 세밀하게 분할하고 할당하기
위해서 네트워크 크기에 맞춰 1비트 단위로 네트워크를 상세히 분할하는 방법을 사용하는데요.
클래스 개념 자체를 버리는 클래스리스(Classless) 기반의 주소 체계를 사용합니다.
&lt;/pre&gt;

&lt;h2 id=&quot;클래스-리스&quot;&gt;클래스 리스&lt;/h2&gt;
&lt;p&gt;클래스리스에서는 구분자가 필요한데 이를 서브넷 마스크(Subnet Mask)라고 합니다.
넷 마스크는 IP주소를 네트워크 포션 / 호스트 포션으로 나누는데 사용되는 숫자 조합입니다. 서브넷 마스크는 IP 주소와 같은 길이의 비트로 구성되며,
이진수(Binary)로 표현했을 때 네트워크 포션은 1로, 호스트 포션은 0으로 설정됩니다.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;즉, 가령 210.100.100.1의 서브넷 마스크가 255.255.255.0이라면,
255.255.255.0은 1111 1111. 1111 1111. 1111 1111. 0000 0000과 같습니다.

여기서 1인 부분은 네트워크를, 0인 부분은 해당 네트워크 내에 속해있는 호스트를 나타내므로 IP주소와 서브넷 마스크를 논리적 AND 연산 결과 값이 바로 서브넷이 됩니다. 하나의 주소를 서브넷 마스크를 씌워서 작은 네트워크로 만드는 것을 서브넷팅(Subnetting)이라고 합니다.

210.100.100.1	=	1101 0010. 0110 0100. 0110 0100. 0000 0001	=	IP주소
255.255.255.0	=	1111 1111. 1111 1111. 1111 1111. 0000 0000	=	서브넷 마스크
210.100.100.0	=	1101 0010. 0110 0100. 0110 0100. 0000 0000	=	서브넷 (AND 연산 결과)

이러면 호스트와 네트워크의 경계를 알 수 있다.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@su_bak/%EC%84%9C%EB%B8%8C%EB%84%B7-%EB%A7%88%EC%8A%A4%ED%81%AC-subnet-mask-%EB%9E%80-398ecdfd5c0d&quot;&gt;출처: medium.com&lt;/a&gt;
&lt;a href=&quot;https://yonlog.tistory.com/95#:~:text=%EC%84%9C%EB%B8%8C%EB%84%B7%20%EB%A7%88%EC%8A%A4%ED%81%AC%EB%8A%94%20IP%EC%A3%BC%EC%86%8C,%EC%9D%80%200%EC%9C%BC%EB%A1%9C%20%EC%84%A4%EC%A0%95%EB%90%A9%EB%8B%88%EB%8B%A4.&quot;&gt;출처: tistory.com&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;표기법&quot;&gt;표기법&lt;/h2&gt;
&lt;p&gt;일반적인 표기법으로는 CIDR 표기법이 사용되며, IP 주소 뒤에 슬래시와 비트 수를 숫자로 표기합니다. 
예를 들어, 192.168.0.0/24와 같이 나타낼 수 있으며,
이 표기법에서 192.168.0.0은 네트워크 ID를 의미하고,
/24는 서브넷 마스크의 길이를 나타냅니다. 24비트 서브넷 마스크는 첫 24비트가 네트워크 ID이고 나머지 8비트가 호스트 ID임을 의미합니다.&lt;/p&gt;

&lt;p&gt;따라서 192.168.0.0/24는 192.168.0.0부터 192.168.0.255 까지의 
IP 주소 범위를 나타냅니다. 여기서 네트워크 ID와 브로드캐스트 주소를 제외하고
실제로 호스트에 할당할 수 있는 IP 주소의 범위는 192.168.0.1 ~ 192.168.0.254가 됩니다.&lt;/p&gt;

&lt;h2 id=&quot;본론&quot;&gt;본론&lt;/h2&gt;
&lt;p&gt;그래서 ip/32, ip/24는 무엇인가?
IP 주소의 범위를 표현하기 위한 방식이다. 이진수 몇 자리까지 고정값으로 두는지에 대한 정의다.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Subnet&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Subnet Mask (Dec)&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;Host 수&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/8&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.0.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16,777,216&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/9&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.128.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8,388,608&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/10&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.192.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4,194,304&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/11&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.224.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2,097,152&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/12&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.240.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1,048,576&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/13&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.248.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;524,288&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/14&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.252.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;262,144&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/15&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.254.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;131,072&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/16&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.0.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;65,536&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/17&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.128.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32,768&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/18&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.192.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16,384&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/19&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.224.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8,192&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/20&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.240.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4,096&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/21&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.248.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2,048&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/22&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.252.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1,024&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/23&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.254.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;512&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/24&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;256&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/25&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.128&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;128&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/26&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.192&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;64&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/27&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.224&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;32&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/28&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.240&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;16&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/29&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.248&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;8&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/30&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.252&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;4&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/31&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.254&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;2&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;/32&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;255.255.255.255&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 12 Date</title>
        <link>/mysql/2024/05/22/mysql-series-12-Date.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-12-Date.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/12.Date.md&quot;&gt;Dictionary - Date&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;날짜-관련&quot;&gt;날짜 관련&lt;/h1&gt;
&lt;pre&gt;&lt;code class=&quot;language-mysql&quot;&gt;set @now := current_timestamp();
set @now := '2024-02-01 17:15:34';
select @now from dual;

select week(@now) - week(date_add(@now, interval - day(@now) + 1 day)) + 1 from dual; -- 달의 몇 째주인지
select DAYOFWEEK(@now) from dual; -- 주의 무슨 요일인지 (1 = SUN ~ 7 = SAT )
&lt;/code&gt;&lt;/pre&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 11 Temporarytable</title>
        <link>/mysql/2024/05/22/mysql-series-11-TemporaryTable.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-11-TemporaryTable.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/11.TemporaryTable.md&quot;&gt;Dictionary - Temporary table&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;temporary-table&quot;&gt;Temporary Table&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;트랜잭션 임시테이블 : 같은 트랜잭션 내에서만 데이터 유지&lt;/li&gt;
  &lt;li&gt;세션 임시테이블 : 같은 세션 내에서 데이터 유지&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 10 Cursor_record_collection</title>
        <link>/mysql/2024/05/22/mysql-series-10-Cursor_Record_Collection.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-10-Cursor_Record_Collection.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/10.Cursor_Record_Collection.md&quot;&gt;Dictionary - Cursor/ Record/ Collection&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;cursor-record-collection&quot;&gt;Cursor/ Record/ Collection&lt;/h1&gt;

&lt;h2 id=&quot;커서&quot;&gt;커서&lt;/h2&gt;

&lt;h3 id=&quot;1-커서란&quot;&gt;1. 커서란&lt;/h3&gt;
&lt;p&gt;특정 SQL 문장을 처리하 결과를 담고 있는 영역(PRIVATE SQL이라는 메모리)을 가리키고 일종의 포인터
종류는 묵시/ 명시적 커서가 있다. 묵시적 커서는 오라클 내부에서 자동으로 생성되어 사용하는 커서이다. 반대로 사용자가 직접 정의해서 사용하는 커서를 명시적 커서라고 한다.&lt;/p&gt;

&lt;p&gt;a. 명시적 커서&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt;
 &lt;span class=&quot;n&quot;&gt;vn_department_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emplyees&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;departmnet_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; 
 &lt;span class=&quot;k&quot;&gt;UPDATE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emplyess&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp_name&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;department_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vn_department_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

 &lt;span class=&quot;n&quot;&gt;DBMS_OUTPUT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PUT_LINE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SQL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ROWCOUNT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- oracle&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;묵시적 커서 속성&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;속성명&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;설명&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SQL%FOUND&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;결과 집합의 패치 로우 수가 1 이상이면 TRUE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SQL%NOTFOUND&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;결과 집합의 패치 로우 수가 0이면 TRUE&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SQL%ROWCOUNT&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;영향 받은 결과 집합의 로우 수 반환, 없으면 0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;SQL%ISOPEN&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;묵시적 커서는 항상 FALSE 반환( 이 속성으로 참조할 때는 이미 묵시적 커서는 닫힌 상태 )&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;b.명시적 커서
커서 선언 - 커서 열기 - 패치 단게에서 커서 사용 - 커서 닫기&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;커서 선언&lt;/p&gt;

    &lt;p&gt;묵시적 커서와 달리 명시적 커서는 선언해야 한다. 명시적 커서는 결과 데이터 집합을 로우별로 참조하는 용도이므로 SELECT 문을 사용할 것이다.&lt;/p&gt;
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;CURSOR&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서명&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;매개변수&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt; 
     &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;커서 열기
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;OPEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서명&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;매개변수&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;패치에서 커서 사용
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;FETCH&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;EXIT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;WEHN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NOTFOUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;커서 닫기
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;CLOSE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;ex)&lt;/p&gt;
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;record&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cursorName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;매개변수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;
         &lt;span class=&quot;n&quot;&gt;executtion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;2-커서-변수&quot;&gt;2. 커서 변수&lt;/h3&gt;
&lt;p&gt;명시적 커서의 이름은 상수이다. 한 번 할당하면 다른 값으로 바꿀 수 없다. 대신 커서 변수라는 것이 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;한 개 이상의 쿼리를 연결해서 사용할 수 있다.&lt;/li&gt;
  &lt;li&gt;변수처럼 커서 변수를 함수나 프로시저의 매개변수로 전달할 수 있다.&lt;/li&gt;
  &lt;li&gt;커서 속성을 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;커셔 변수 선언
    &lt;ol&gt;
      &lt;li&gt;참조용 커서 타입을 생성하고 선언
        &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타입명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CUSOR&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;반환타입&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;커서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타입명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
        &lt;ul&gt;
          &lt;li&gt;RETURN을 생략하면 약한 커서 타입/ 반대는 강한 커서 타입이라고 한다.
            &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dep_curtype&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURSOR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;departments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ROWTYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dep_curtype&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CURSOR&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;            &lt;/div&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;커서 변수 사용 (커서 변수와 쿼리문 연결)
        &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;OPEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서변수명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;강한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타입은&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타입과&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;맞춰야한다&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;커서 변수에서 결과 집합 가져오기
        &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FETCH&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FETCH&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;레코드명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;한&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;row&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;만&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;        &lt;/div&gt;
      &lt;/li&gt;
      &lt;li&gt;커서 변수를 매개변수로 전달 : 커서도 변수이므로 함수/ 프로시저의 매개변수로 전달할 수 있다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;커서-표현식&quot;&gt;커서 표현식&lt;/h3&gt;
&lt;p&gt;SELECT 문에 컬럼 형태로 커서를 사용하는 것이다.&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;department_name&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;departments&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;department_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;department_id&lt;/span&gt; 
       &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dep_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;emp_name&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employees&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;department_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;레코드&quot;&gt;레코드&lt;/h2&gt;
&lt;p&gt;PL/SQL에서 제공하는 데이터 타입 중 하나로, 문자형, 숫자형 같은 기본 빌트인 타입과 달리 복합형 구조이다. 일반 빌트인 타입으로 변수를 선언하면
해당 변수는 한 번에 하나의 값만 가질 수 있지만, 레코드는 여러 개의 값을 가질 수 있다.&lt;/p&gt;

&lt;p&gt;레코드는 선언 방식에 따라 커서형, 사용자 정의형, 테이블형 레코드로 나눌 수 있다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;사용자 정의형 : 테이블과 비슷한 구조인데 테이블의 컬럼에 해당하는 것을 필드라고 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;레코드명&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RECORD&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;field1_Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field1_Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
     &lt;span class=&quot;n&quot;&gt;field2_Name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;field2_Type&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
     
  &lt;span class=&quot;n&quot;&gt;recordVariable&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;recordName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      
   &lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt;
   
      &lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;depart_rect&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;RECORD&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;department_id&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;NUMBER&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
          &lt;span class=&quot;n&quot;&gt;department_name&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;VARCHAR2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
       
      &lt;span class=&quot;n&quot;&gt;vr_dep&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;departRect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; 
   &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;테이블형 레코드 : 특정 테이블의 컬럼 값을 받아오는 변수를 선언할 때 사용할 수 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- 컬럼 값을 받아오는 변수 선언&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;컬럼명&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
&lt;span class=&quot;c1&quot;&gt;-- 테이블의 모든 컬럼을 받아 사용하는 레코드&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;레코드&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;테이블명&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ROWTYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
  &lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;vr_dep&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;departments&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ROWTYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vr_dep&lt;/span&gt; 
    &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;departments&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;department_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch11_dep2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;values&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v_dep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;커서형 레코드 : 커서를 레코드 변수르 받는 것을 커서형 레코드라고 한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;   &lt;span class=&quot;k&quot;&gt;DECLARE&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;CURSOR&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;department_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;department_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parent_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;manager_id&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;departments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

   &lt;span class=&quot;n&quot;&gt;vr_dep&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ROWTYPE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       
   &lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch11_dep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;k&quot;&gt;OPEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
        &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;FETCH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vr_dep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;EXIT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;NOTFOUND&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch11_dep&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;vr_dep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
            
        &lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 09 Exception_transaction</title>
        <link>/2024/05/22/mysql-series-09-Exception_Transaction.html</link>
        <guid isPermaLink="true">/2024/05/22/mysql-series-09-Exception_Transaction.html</guid>
        <description>
&lt;hr /&gt;
&lt;p&gt;layout: post
categories: [APACHE]
—
from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/09.Exception_Transaction.md&quot;&gt;Dictionary - Exception and Transaction&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;exception-transaction&quot;&gt;Exception/ Transaction&lt;/h1&gt;

&lt;h2 id=&quot;예외처리&quot;&gt;예외처리&lt;/h2&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;EXCEPTION&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exception1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handling1&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;expeption2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handling2&lt;/span&gt;
          &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;OTHERS&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;handling&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;트랜잭션&quot;&gt;트랜잭션&lt;/h2&gt;
&lt;p&gt;특정 테이블에서 데이터를 읽어 조작 후 다른 테이블에 입력하거나 갱신, 삭제하는데 처리 도중 오류가 발생하면 모든 작업을 원상태로 되돌리고, 처리 과정이 모두 성공했을 때만 최종적으로 
데이터베이스에 반영하는 것이 트랜잭션 처리이다.&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- (INSERT, UPDATE, DELETE, MERGE한 결과가 commit 하지 않으면 반영되지 않는다.)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- [WORK] [TO [SAVEPOINT] savepointName];&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SAVEPOINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;-- 트랜잭션 취소 지점을 지정할 수 있다.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 08 Pl_sql</title>
        <link>/mysql/2024/05/22/mysql-series-08-PL_SQL.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-08-PL_SQL.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/08.PL_SQL.md&quot;&gt;Dictionary - PL/SQL&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;plsql&quot;&gt;PL/SQL&lt;/h1&gt;

&lt;h2 id=&quot;블록&quot;&gt;블록&lt;/h2&gt;
&lt;p&gt;PL/SQL 소스 프로그램의 기본 단위, 선언부, 실행부, 예외처리부로 구성된다. 이 블록은 다시 이름이 없는 블록, 이름이 있는 블록으로 구분할 수 있는데 전자는 익명 블록이고 함수, 프로시저, 패키지 등이 후자에 속한다.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;n&quot;&gt;NAMEING&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;생략하면&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;익명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;블록&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;DECLARATION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;각종&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;상수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;커서&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;등을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;선언한다&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;반드시&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;끝나야한다&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수명&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타입&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;초깃값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;상수명&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CONSTANT&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터타입&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;상수값&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EXECUTION&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;실제&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;로직&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;처리부&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DML&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;만&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사용&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가능&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EXCEPTION&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EXCEPTIONS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;로직&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문제가&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;발생하면&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;처리할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;내용을&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;기술하는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;부분이다&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;제어문&quot;&gt;제어문&lt;/h2&gt;
&lt;h3 id=&quot;if&quot;&gt;IF&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
 
    &lt;span class=&quot;c1&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;--&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ELSIF&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
   &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; 
   &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;case&quot;&gt;CASE&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;표현식&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
         &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;결과&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
         &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; 
        &lt;span class=&quot;err&quot;&gt;기타&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;loop&quot;&gt;LOOP&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;처리&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EXIT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;종료&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;while&quot;&gt;WHILE&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;WHILE&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;조건&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;처리문&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;for&quot;&gt;FOR&lt;/h3&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;FOR&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;인덱스&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;카운트&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;변수&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;REVERSE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;초기&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;최종&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;
    &lt;span class=&quot;err&quot;&gt;처리문&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LOOP&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;continue-goto&quot;&gt;CONTINUE, GOTO&lt;/h3&gt;
&lt;p&gt;CONTINUE WHEN 조건으로 로직을 건너뛸 수 있다.
GOTO로 흐름을 변경할 수 있다. 
ex) «third»
     ….로직
    GOTO third;&lt;/p&gt;

&lt;h3 id=&quot;null문&quot;&gt;NULL문&lt;/h3&gt;
&lt;p&gt;ELSE NULL로 아무것도 하지 않고 넘어가도록 할 수도 있다. (if-else/ case-when-then 모두)&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGIC1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ELSIF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition2&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;LOGIC2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;함수&quot;&gt;함수&lt;/h2&gt;

&lt;p&gt;사용자가 직접 로직을 구현하는 사용자 정의 함수(내장 함수와 비교해서)&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FUNCTION&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;parameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constants&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;executions&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;EXCEPTION&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;failOverLogics&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        
&lt;span class=&quot;n&quot;&gt;functionName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;프로시저&quot;&gt;프로시저&lt;/h2&gt;
&lt;p&gt;함수는 특정 연산을 수행한 뒤 결과 값을 반환하지만, 프로시저는 특정한 로직을 처리하기만 하고 결과 값을 반환하지 않는 서브 프로그램이다.&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OR&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;REPLACE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;PROCEDURE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;procedureName&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;parameter&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;OUT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INOUT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datatype&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;defaultValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;IS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;variables&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constans&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;..&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;BEGIN&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;executions&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;RETURN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;returnValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EXCEPTION&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;failOverLogics&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    
&lt;span class=&quot;k&quot;&gt;EXECUTE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;procedureName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;param&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;..)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 07 Subquery</title>
        <link>/mysql/2024/05/22/mysql-series-07-SubQuery.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-07-SubQuery.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/07.SubQuery.md&quot;&gt;Dictionary - Subquery&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;subquery&quot;&gt;SubQuery&lt;/h1&gt;
&lt;p&gt;SQL 문장 안에서 보조로 사용되는 또 다른 SELECT문을 의미한다.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;메인 쿼리와의 연관성에 따라
    &lt;ol&gt;
      &lt;li&gt;연관성 없는 (Noncorrelated) 서브쿼리 : 메인 테이블과 조인 조건이 걸리지 않는 경우&lt;/li&gt;
      &lt;li&gt;연관성이 있는 서브 쿼리  : 메인 테이블과 연관성이 있는 서브 쿼리 ( 세미 조인 )&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;형태에 따라
    &lt;ol&gt;
      &lt;li&gt;일반 서브 쿼리( SELECT )&lt;/li&gt;
      &lt;li&gt;인라인뷰 ( FROM )&lt;/li&gt;
      &lt;li&gt;중첩 쿼리 ( WHERE )&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;서브쿼리가 너무 복잡해진다면 WITH 절로 가상테이블을 만들어서 처리할 수도 있다.&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kor_loan_status&lt;/span&gt;
     &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- WITH 사용&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WITH&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;   &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;kor_loan_status&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
     
     
     
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 06 Join</title>
        <link>/mysql/2024/05/22/mysql-series-06-Join.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-06-Join.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/06.Join.md&quot;&gt;Dictionary - Join&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;join&quot;&gt;Join&lt;/h1&gt;
&lt;h2 id=&quot;종류&quot;&gt;종류&lt;/h2&gt;
&lt;ul&gt;
  &lt;li&gt;조인 연산자에 따른 분류 : 동등 조인, 안티 조인&lt;/li&gt;
  &lt;li&gt;조인 대상에 따른 구분 : 셀프 조인&lt;/li&gt;
  &lt;li&gt;조인 조건에 따른 분류 : 내부 조인, 외부 조인, 세미 조인, 카타시안 조인&lt;/li&gt;
  &lt;li&gt;기타 : ANSI 조인&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;외부-조인--내부-조인&quot;&gt;외부 조인 / 내부 조인&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;동등 조인
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;세미 조인 : 서브 쿼리를 사용해서 서브 쿼리에 존재하는 데이터만 메인쿼리에서 추출하는 조인 (Join 없이 서브쿼리 + 조건으로 )
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- EXISTS 사용&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;EXISTS&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; 
 &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;-- IN 사용&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A_TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B_TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;안티 조인 : A에서 B에 없는 요소만 추출&lt;/li&gt;
  &lt;li&gt;셀프 조인 : 동일한 테이블끼리 조인하는 방법&lt;/li&gt;
  &lt;li&gt;외부 조인 : 한 테이블을 기준으로 다른 테이블 값이 NULL이라도 추출하는 것&lt;/li&gt;
  &lt;li&gt;카티시안 조인 WHERE에 조건이 없는 조인 (모든 경우의 수, 카티시안 곱)&lt;/li&gt;
  &lt;li&gt;ANSI : join … on&lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 05 Function</title>
        <link>/mysql/2024/05/22/mysql-series-05-Function.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-05-Function.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/05.Function.md&quot;&gt;Dictionary - Function&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;함수&quot;&gt;함수&lt;/h1&gt;

&lt;h2 id=&quot;숫자-관련-함수&quot;&gt;숫자 관련 함수&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;ABS&lt;/li&gt;
  &lt;li&gt;CEIL / FLOOR&lt;/li&gt;
  &lt;li&gt;ROUND(n, i) / TRUNC(n1, n2) : 반올림 / 잘라냄&lt;/li&gt;
  &lt;li&gt;POWER / SQRT : 제곱 / 제곱근&lt;/li&gt;
  &lt;li&gt;MOD(n2, n1) / REMAINDER(n2, n1) : n2를 n1으로 나눈 값 / n2를 n1으로 나눈 나머지&lt;/li&gt;
  &lt;li&gt;EXP(n) / LN(n) / LOG(n2, n1) : e의 n제곱 / 자연 로그 함수로 밑수가 e인 로그 함수 / n2를 밑수로 하는 n1의 로그&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;문자-함수&quot;&gt;문자 함수&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;INITCAP(char), LOWER(char), UPPER(char) : 첫 글자 대문자 / lowerCase / upperCase&lt;/li&gt;
  &lt;li&gt;CONCAT(char1, char2), SUBSTR(char, pos, len), SUBSTRB(char, pos, len) : 문자 결합 / char의 pos부터 len 길이만큼 잘라냄 / len이 길이가 아닌 문자열 바이트&lt;/li&gt;
  &lt;li&gt;LTRIM(char, set), RTRIM(char set) : char 문자열에서 set으로 지정된 문자열을 왼쪽 끝에서 제거한 후 반환 / ~ 오른쪽 끝에서&lt;/li&gt;
  &lt;li&gt;LPAD(expr1, n, expr2), RPAD(expr1, n, expr2) : exp2을 왼/오른쪽부터 n자리만큼 채워 expr1을 반환&lt;/li&gt;
  &lt;li&gt;REPLACE(char, search_str, replace_str), TRANSLATE(expr, from_str, to_str) : char에서 search_str문자열을 찾아 replace_str로 대체 / REPLACE와 유사하지만 문자열 자체가 아닌 한 글자씩 매핑해 바꾼 결과를 반환&lt;/li&gt;
  &lt;li&gt;INSTR(str, substr, pos, occur), LENGTH(chr), LENGTHB(chr) : str에서 substr과 일치하는 위치를 반환하는데 pos는 시작 위치로 기본 값은 1, occur은 몇 번째 일치하는지 / LENGTH는 길이 / LENGTHB는 바이트 수&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;날짜-함수&quot;&gt;날짜 함수&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;SYSDATE, SYSTIMESTAMP : DATE, TIMESTAMP 형으로 반환&lt;/li&gt;
  &lt;li&gt;ADD_MONTHS(date, integer)&lt;/li&gt;
  &lt;li&gt;MONTHS_BETWEEN(date1, date2) : 두 날짜 사이 개월 수&lt;/li&gt;
  &lt;li&gt;LAST_DAY(date) : date날짜를 기준으로 해당 월의 마지막 일자를 반환&lt;/li&gt;
  &lt;li&gt;ROUND(date, format), TRUNC(date, format) : format에 반올림한 날짜 / 잘라낸 날짜
```sql
SELECT SYSDATE, ROUND(SYSDATE, ‘month’), TRUNC(SYSDATE, ‘month’) FROM DUAL;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;2023-10-01 22:09:24 | 2023-11-01 00:00:00 | 2023-09-01 00:00:00 |&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;6. NEXT_DAY( date, char ) : date를 char에 명시한 날짜로 다음 주 주중 날짜를 반환(char =&amp;gt; 요일)

## 변환 함수
1. TO_CHAR(숫자 혹은 날짜, format) : 형식에 맞게 출력
2. TO_NUMBER(expr, format) : 문자나 다른 유형의 숫자를 NUMBER형으로 변환
3. TO_DATE(char, format), TO_TIMESTAMP(char, format)

## NULL 관련 함수
1. NVL(expr1, expr2), NVL2(expr1, expr2, expr3) : ifnull
2. COALESCE
3. NULLIF

## 집계함수
1. COUNT
2. SUM
3. AVG
4. MIN, MAX, 
5. VARIANCE, STDDEV : 분산/ 표준편차

### ROLLUP / CUBE
1. ROLLUP : 집계 정보를 보여준다.
2. CUBE : ROLLUP과 유사하지만 가능한 모든 조합으로 집계한 결과를 반환
```sql
 PERIOD GUBUN TOTAL_JAN
------------------------
201310  기타대출  676078
201310  주택담보  1234
201311  기타대출  4423
201311  주택담보  1412

SELECT period, gubun, SUM(loan_jan_amt) total_jan FROM ~
WHERE period LIKE ~
GROUP BY ROLLUP(period, gubun);

## ROLLUP
PERIOD GUBUN TOTAL_JAN
------------------------
201310  기타대출  1423
201310  주택담보  1234
201310          2657
201311  기타대출  4423
201311  주택담보  1412
201311          5835


SELECT period, gubun, SUM(loan_jan_amt) total_jan FROM ~
WHERE period LIKE ~
GROUP BY CUBE(period, gubun);

## CUBE
PERIOD GUBUN TOTAL_JAN
------------------------
                (전체 합)
        기타대출  (기타대출 전체 합)
        주택담보  (주택담보 전체 합)
201310          2657
201310  기타대출  1423
201310  주택담보  1234
201311          5835
201311  기타대출  4423
201311  주택담보  1412
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;집합-연산자&quot;&gt;집합 연산자&lt;/h2&gt;
&lt;ol&gt;
  &lt;li&gt;UNION : 합집합&lt;/li&gt;
  &lt;li&gt;UNION_ALL : 중복된 항목도 모두 조회 (합집합 + 교집합)&lt;/li&gt;
  &lt;li&gt;INTERSECT : 교집합&lt;/li&gt;
  &lt;li&gt;MINUS : 차집합&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;제약 사항
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;연산자&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;개수&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데이터&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타입이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;일치해야&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;한다&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ORDER&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;는&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;맨&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;마지막&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;문장에서만&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사용&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;가능&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;BLOB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;CLOB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BFILE&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;은&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;집한&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;연산자&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사용이&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;불가&lt;/span&gt;
&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;UNION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTERSECT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MINUS&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;는&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LONG&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;형&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;컬럼에&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;사용할&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;수&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;없다&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;grouping-set&quot;&gt;GROUPING SET&lt;/h2&gt;
&lt;p&gt;GROUPING SET ( expr1, expr2, expr3 ) ==
(
GROUP BY expr1 
   UNION ALL
GROUP BY expr2
   UNION ALL
GROUP BY expr3
)&lt;/p&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 04 Operatorandexpression</title>
        <link>/mysql/2024/05/22/mysql-series-04-OperatorAndExpression.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-04-OperatorAndExpression.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/04.OperatorAndExpression.md&quot;&gt;Dictionary - Operator and Expressions&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;연산자&quot;&gt;연산자&lt;/h1&gt;
&lt;ol&gt;
  &lt;li&gt;수식 연산자 : +, -, *, /&lt;/li&gt;
  &lt;li&gt;
    &lt;table&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;td&gt;문자 연산자 :&lt;/td&gt;
          &lt;td&gt; &lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
  &lt;/li&gt;
  &lt;li&gt;논리 연산자 : &amp;gt;, &amp;lt;, &amp;gt;=, &amp;lt;=, =, &amp;lt;&amp;gt;, !=, ^=&lt;/li&gt;
  &lt;li&gt;집한 연산자 : UNION, UNION ALL, INTERSECT, MINUS&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;표현식&quot;&gt;표현식&lt;/h1&gt;
&lt;p&gt;한 개 이상의 값과 연산자, SQL 함수 등이 결합된 식&lt;/p&gt;
&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CASE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value1&lt;/span&gt;
     &lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value2&lt;/span&gt;
    
    &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;
    
    &lt;span class=&quot;k&quot;&gt;ELSE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;otherValue&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;END&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;조건식&quot;&gt;조건식&lt;/h1&gt;
&lt;p&gt;한 개 이상의 표현식과 논리 연산자가 결합된 식 TRUE/ FALSE/ UNKNOWN 세 가지 타입을 반환한다.&lt;/p&gt;

&lt;h2 id=&quot;비교-조건식&quot;&gt;비교 조건식&lt;/h2&gt;
&lt;p&gt;논리 연산자나 ANY, SOME, ALL 키워드로 비교하는 조건식&lt;/p&gt;

&lt;h2 id=&quot;null-조건식&quot;&gt;NULL 조건식&lt;/h2&gt;

&lt;h2 id=&quot;between-and-조건식&quot;&gt;BETWEEN AND 조건식&lt;/h2&gt;

&lt;h2 id=&quot;in-조건식&quot;&gt;IN 조건식&lt;/h2&gt;

&lt;h2 id=&quot;exist-조건식&quot;&gt;EXIST 조건식&lt;/h2&gt;

&lt;h2 id=&quot;like-조건식&quot;&gt;LIKE 조건식&lt;/h2&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
      <item>
        <title>[mysql Series] 03 Sql</title>
        <link>/mysql/2024/05/22/mysql-series-03-SQL.html</link>
        <guid isPermaLink="true">/mysql/2024/05/22/mysql-series-03-SQL.html</guid>
        <description>&lt;p&gt;from &lt;a href=&quot;https://github.com/newkayak12/Dictionary/blob/master/sql/03.SQL.md&quot;&gt;Dictionary - SQL&lt;/a&gt;&lt;/p&gt;

&lt;h1 id=&quot;sql&quot;&gt;SQL&lt;/h1&gt;

&lt;ol&gt;
  &lt;li&gt;SELECT&lt;/li&gt;
  &lt;li&gt;INSERT&lt;/li&gt;
  &lt;li&gt;UPDATE&lt;/li&gt;
  &lt;li&gt;MERGE : 조건을 비교해서 테이블에 해당 조건에 맞는 데이터가 없으면 INSERT / 있으면 UPDATE
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;MERGE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SCHEMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;USING&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;col1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;DELETE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;update_delete&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WHEN&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MATCHED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;THEN&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;col2&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
 &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;conditoin&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;DELETE&lt;/li&gt;
  &lt;li&gt;COMMIT / ROLLBACK : COMMIT은 변경한 데이터를 데이터베이스에 마지막으로 반영하는 역할을, ROLLBACK은 그 반대로 변경한 데이터를 변경하기 이전 상태로 되돌리는 역할
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;COMMIT&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;WORK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAVEPOINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savePointName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;ROLLBACK&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;WORK&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;TO&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SAVEPOINT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savePointName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;TRUNCATE : DELETE와 같은 기능을 수행하지만 삭제한 후 COMMIT을 해야 데이터가 완전히 삭제되고, 반대로 ROLLBACK을 실행하면 데이터가 삭제되기 전으로 복귀한다.
단, DDL에 속하는 TRUNCATE는 실행하면 데이터가 바로 삭제되고, ROLLBACK을 실행하더라도 삭제 전 상태로 복귀되지 않는다.
    &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;TRUNCATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;SCHEMA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tableName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;
</description>
        <pubDate>Wed, 22 May 2024 00:00:00 +0900</pubDate>
      </item>
    
  </channel>
</rss>
